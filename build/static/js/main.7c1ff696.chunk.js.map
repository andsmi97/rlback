{"version":3,"sources":["Components/MySnackbarContentWrapper/index.js","constants.js","Components/Posts/Post/index.js","Components/Posts/actions.js","Components/Posts/constants.js","Components/Posts/index.js","tenantsSupportFunctions.js","actions.js","Components/Settings/index.js","Components/Tariffs/index.js","Components/FullWidthTabs/index.js","Components/MultipleSelect/index.js","Components/EmailSender/index.js","Components/ClippedDrawer/index.js","App.js","serviceWorker.js","reducers.js","Components/Posts/reducers.js","Components/Posts/Post/reducers.js","index.js","Components/Posts/Post/constants.js"],"names":["variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","MySnackbarContentWrapper","_this$props","this","props","classes","className","message","onClose","variant","other","Object","objectWithoutProperties","Icon","react_default","a","createElement","SnackbarContent_default","assign","classNames","aria-describedby","id","icon","iconVariant","action","IconButton_default","key","aria-label","color","close","onClick","Close_default","React","Component","withStyles","theme","backgroundColor","green","palette","dark","primary","amber","fontSize","opacity","marginRight","spacing","unit","display","alignItems","BACKEND_URI","Post","deletePost","fetch","concat","method","headers","Content-Type","body","JSON","stringify","_this","postID","then","response","json","renderDeletePost","onDeleteSuccess","_this2","title","Card_default","card","CardActionArea_default","CardContent_default","Typography_default","gutterBottom","component","dangerouslySetInnerHTML","__html","CardActions_default","Button_default","size","onUpdatePostClick","Snackbar_default","anchorOrigin","vertical","horizontal","open","snackDelete","autoHideDuration","onDeleteSuccessClose","Components_MySnackbarContentWrapper","connect","state","postsReducer","dispatch","type","payload","selectEditPost","post","marginBottom","media","objectFit","paper","justifyContent","flexDirection","padding","paddingTop","boxShadow","Posts","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onSubmitPost","titleField","bodyField","renderNewPost","onInsertionSuccess","onResetInsertPostFields","onSubmitUpdatePost","editPostID","editTitleField","editBodyField","renderUpdatePost","onUpdateSuccess","onResetUpdatePostFields","catch","console","log","scrollToMyRef","window","scroll","top","behavior","modules","toolbar","list","formats","screen","onRequestPosts","onTitleChange","onBodyChange","onEditBodyChange","onEditTitleChange","subjectField","insertWindowOpened","editWindowOpended","content","Grid_default","container","direction","justify","ref","item","xs","Paper_default","TextField_default","label","value","margin","onChange","lib_default","button","loadedPosts","map","Posts_Post","_id","snackMessageSend","onMessageSendSuccessClose","ContentProps","fab","onCloseInsertPostWindow","onCloseEditPostWindow","onOpenInsertPostWindow","Add_default","snackInsert","onInsertionSuccessClose","snackUpdate","onUpdateSuccessClose","date","Date","now","data","event","target","onOpenEditPostWindow","root","flexGrow","height","zIndex","overflow","position","appBar","drawer","background","default","minWidth","overflowY","marginTop","bottom","right","createTenantsStringArray","tenants","entries","tenant","name","getTenantsObjectsFromSelected","selectedArray","keys","filter","homeNumber","trim","split","shift","includes","reduce","acc","setMessageField","text","setSubjectField","setSendingFiles","files","Settings","updateEmailSettings","user","email","updateAdminEmailField","password","updateAdminMailPassField","onSettingsSuccess","onEmailSettingsUpdateSuccess","onResetAdminEmailSettings","updateAccountSettings","updateAdminAccountPassNewField","updateAdminAccountPassRepeatField","currentPassword","updateAdminAccountPassOldField","newPassword","onAccountSettingsUpdateSuccess","onResetAdminAccountSettings","setState","onUpdateAdminEmail","onUpdateAdminMailPass","onUpdateAdminAccountPassNew","onUpdateAdminAccountPassOld","onUpdateAdminAccountPassRepeat","onUpdateAdminPhone","updateAdminPhoneField","FormControl_default","formControl","InputLabel_default","htmlFor","Input_default","FormHelperText_default","snackSettings","onSettingsSuccessClose","changeAdminInputs","handleSnackbars","onEmailSettingsUpdateSuccessClose","onAccountSettingsUpdateSuccessClose","marginLeft","Tariffs","updateTariffs","gas","onTariffsSuccess","onUpdateTariffsSuccess","onResetTariffs","onUpdateTariffs","updateTariffsField","snackTariffs","onTariffsSuccessClose","changeTariffsInputs","onUpdateTariffsSuccessClose","TabContainer","_ref","children","dir","style","FullWidthTabs","handleChange","handleChangeIndex","index","insertTenant","actionTenantPending","insertNameField","insertEmailField","houseNumber","insertHouseNumberField","actionTenantSuccess","loadTenants","onResetTenantInsertFields","loadTenantsError","updateTenant","updateNameField","updateEmailField","updateHouseNumberField","onResetTenantUpdateFields","deleteTenant","deleteHouseNumberField","onResetTenantDeleteFields","onInsertNameChange","onInsertEmailChange","onInsertHouseNumberChange","onUpdateNameChange","onUpdateEmailChange","onDeleteHouseNumberChange","onUpdateHouseNumberChange","isTenantActionPending","CircularProgress_default","progress","AppBar_default","Tabs_default","tabs","indicatorColor","textColor","fullWidth","Tab_default","react_swipeable_views_lib_default","axis","onChangeIndex","tabContainer","changeTenantsInputs","requestTenants","width","flexWrap","&>div","withTheme","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","MultipleSelect","onRequestTenants","onTenantChange","selectedTenants","tenantsArray","selectedName","Select_default","multiple","input","renderValue","selected","chips","Chip_default","chip","selectedTenant","MenuItem_default","Components_FullWidthTabs","isPending","onSelectAllTenants","values","selectAllTenants","maxWidth","EmailSender","onSubmit","formData","FormData","forEach","file","append","messageField","selectedTenantsObject","sendingEmailPending","sendingEmailSuccess","onMessageSendSuccess","onResetMessageFields","sendingEmailError","onMessageChange","onSubjectChange","onDrop","onCancel","multiline","rows","textField","dist_es","dropZone","bind","onFileDialogCancel","length","f","isEmailPending","Components_MultipleSelect","changeEmailInputs","borderWidth","borderColor","borderStyle","borderRadius","fontFamily","boxSizing","ClippedDrawer","header","indent","onClickEmailSender","e","onClickNews","onClickTariffs","onClickSettings","assertThisInitialized","Toolbar_default","noWrap","Drawer_default","drawerPaper","ListItem_default","ListItemIcon_default","Email_default","ListItemText_default","FormatAlignLeft_default","MonetizationOn_default","ContactMail_default","Components_EmailSender","Components_Posts","Components_Tariffs","Components_Settings","typography","useNextVariants","mixins","App","Components_ClippedDrawer","Boolean","location","hostname","match","initialStateEmail","initialStateTenants","initialStateFields","initialStateSettingsFields","initialStateTariffsFields","initialStateSnackbars","initialStatePosts","findPostByID","logger","createLogger","rootReducer","combineReducers","arguments","undefined","objectSpread","toConsumableArray","findPostIndexByID","postReducer","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7c1ff696.chunk.js","sourcesContent":["import React from \"react\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport green from \"@material-ui/core/colors/green\";\r\nimport amber from \"@material-ui/core/colors/amber\";\r\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\r\nimport WarningIcon from \"@material-ui/icons/Warning\";\r\nimport classNames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nconst variantIcon = {\r\n  success: CheckCircleIcon,\r\n  warning: WarningIcon,\r\n  error: ErrorIcon,\r\n  info: InfoIcon\r\n};\r\n\r\nconst styles1 = theme => ({\r\n  success: {\r\n    backgroundColor: green[600]\r\n  },\r\n  error: {\r\n    backgroundColor: theme.palette.error.dark\r\n  },\r\n  info: {\r\n    backgroundColor: theme.palette.primary.dark\r\n  },\r\n  warning: {\r\n    backgroundColor: amber[700]\r\n  },\r\n  icon: {\r\n    fontSize: 20\r\n  },\r\n  iconVariant: {\r\n    opacity: 0.9,\r\n    marginRight: theme.spacing.unit\r\n  },\r\n  message: {\r\n    display: \"flex\",\r\n    alignItems: \"center\"\r\n  }\r\n});\r\nclass MySnackbarContentWrapper extends React.Component {\r\n  render() {\r\n    const {\r\n      classes,\r\n      className,\r\n      message,\r\n      onClose,\r\n      variant,\r\n      ...other\r\n    } = this.props;\r\n    const Icon = variantIcon[variant];\r\n    return (\r\n      <SnackbarContent\r\n        className={classNames(classes[variant], className)}\r\n        aria-describedby=\"client-snackbar\"\r\n        message={\r\n          <span id=\"client-snackbar\" className={classes.message}>\r\n            <Icon className={classNames(classes.icon, classes.iconVariant)} />\r\n            {message}\r\n          </span>\r\n        }\r\n        action={[\r\n          <IconButton\r\n            key=\"close\"\r\n            aria-label=\"Close\"\r\n            color=\"inherit\"\r\n            className={classes.close}\r\n            onClick={onClose}\r\n          >\r\n            <CloseIcon className={classes.icon} />\r\n          </IconButton>\r\n        ]}\r\n        {...other}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nMySnackbarContentWrapper.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  className: PropTypes.string,\r\n  message: PropTypes.node,\r\n  onClose: PropTypes.func,\r\n  variant: PropTypes.oneOf([\"success\", \"warning\", \"error\", \"info\"]).isRequired\r\n};\r\n\r\nexport default withStyles(styles1)(MySnackbarContentWrapper);\r\n","export const BACKEND_URI = \"http://localhost:3001\";\r\n\r\nexport const CHANGE_SEARCH_FIELD = \"CHANGE_SEARCH_FIELD\";\r\nexport const REQUEST_ROBOTS_PENDING = \"REQUEST_ROBOTS_PENDING\";\r\nexport const REQUEST_ROBOTS_SUCCESS = \"REQUEST_ROBOTS_SUCCESS\";\r\nexport const REQUEST_ROBOTS_FAILED = \"REQUEST_ROBOTS_FAILED\";\r\n\r\nexport const INSERT_TENANT = \"INSERT_TENANT\";\r\nexport const DELETE_TENANT = \"DELETE_TENANT\";\r\nexport const UPDATE_TENANT = \"UPDATE_TENANT\";\r\nexport const REQUEST_TENANTS_PENDING = \"REQUEST_TENANTS_PENDING\";\r\nexport const REQUEST_TENANTS_SUCCESS = \"REQUEST_TENANTS_SUCCESS\";\r\nexport const REQUEST_TENANTS_FAILED = \"REQUEST_TENANTS_FAILED\";\r\nexport const SEND_MESSAGES = \"SEND_MESSAGES\";\r\nexport const UPLOAD_FILES = \"UPLOAD_FILES\";\r\n\r\nexport const CHANGE_INSERT_NAME_FIELD = \"CHANGE_INSERT_NAME_FIELD\";\r\nexport const CHANGE_INSERT_EMAIL_FIELD = \"CHANGE_INSERT_EMAIL_FIELD\";\r\nexport const CHANGE_INSERT_HOUSENUMBER_FIELD =\r\n  \"CHANGE_INSERT_HOUSENUMBER_FIELD\";\r\nexport const CHANGE_UPDATE_NAME_FIELD = \"CHANGE_UPDATE_NAME_FIELD\";\r\nexport const CHANGE_UPDATE_EMAIL_FIELD = \"CHANGE_UPDATE_EMAIL_FIELD\";\r\nexport const CHANGE_UPDATE_HOUSENUMBER_FIELD =\r\n  \"CHANGE_UPDATE_HOUSENUMBER_FIELD\";\r\nexport const CHANGE_DELETE_HOUSENUMBER_FIELD =\r\n  \"CHANGE_DELETE_HOUSENUMBER_FIELD\";\r\n\r\nexport const CHANGE_MESSAGE_FIELD = \"CHANGE_MESSAGE_FIELD\";\r\nexport const CHANGE_SUBJECT_FIELD = \"CHANGE_SUBJECT_FIELD\";\r\nexport const CHANGE_SELECTED_TENANTS = \"CHANGE_SELECTED_TENANTS\";\r\nexport const CHANGE_SENDING_FILES = \"CHANGE_SENDING_FILES\";\r\nexport const REMOVE_SENDING_FILES = \"REMOVE_SENDING_FILES\";\r\nexport const SELECT_ALL_TENANTS_ON_LOAD = \"SELECT_ALL_TENANTS_ON_LOAD\";\r\n\r\nexport const SWITCH_INSERTION_SUCCESS = \"SWITCH_INSERTION_SUCCESS\";\r\nexport const SWITCH_UPDATE_SUCCESS = \"SWITCH_UPDATE_SUCCESS\";\r\nexport const SWITCH_DELETE_SUCCESS = \"SWITCH_DELETE_SUCCESS\";\r\n\r\nexport const SWITCH_MESSAGE_SEND_SUCCESS = \"SWITCH_MESSAGE_SEND_SUCCESS\";\r\n\r\nexport const SWITCH_INSERTION_SUCCESS_CLOSE = \"SWITCH_INSERTION_SUCCESS_CLOSE\";\r\nexport const SWITCH_UPDATE_SUCCESS_CLOSE = \"SWITCH_UPDATE_SUCCESS_CLOSE\";\r\nexport const SWITCH_DELETE_SUCCESS_CLOSE = \"SWITCH_DELETE_SUCCESS_CLOSE\";\r\n\r\nexport const SWITCH_MESSAGE_SEND_SUCCESS_CLOSE =\r\n  \"SWITCH_MESSAGE_SEND_SUCCESS_CLOSE\";\r\n\r\nexport const RESET_EMAIL_FIELDS = \"RESET_EMAIL_FIELDS\";\r\nexport const RESET_TENANT_INSERT_FIELDS = \"RESET_TENANT_INSERT_FIELDS\";\r\nexport const RESET_TENANT_UPDATE_FIELDS = \"RESET_TENANT_UPDATE_FIELDS\";\r\nexport const RESET_TENANT_DELETE_FIELDS = \"RESET_TENANT_DELETE_FIELDS\";\r\n\r\nexport const CHANGE_UPDATE_ADMIN_EMAIL_FIELD =\r\n  \"CHANGE_UPDATE_ADMIN_EMAIL_FIELD\";\r\nexport const CHANGE_UPDATE_ADMIN_MAIL_PASS_FIELD =\r\n  \"CHANGE_UPDATE_ADMIN_MAIL_PASS_FIELD\";\r\nexport const CHANGE_UPDATE_ADMIN_ACCOUNT_PASS_OLD_FIELD =\r\n  \"CHANGE_UPDATE_ADMIN_ACCOUNT_PASS_OLD_FIELD\";\r\nexport const CHANGE_UPDATE_ADMIN_ACCOUNT_PASS_NEW_FIELD =\r\n  \"CHANGE_UPDATE_ADMIN_ACCOUNT_PASS_NEW_FIELD\";\r\nexport const CHANGE_UPDATE_ADMIN_ACCOUNT_PASS_REPEAT_FIELD =\r\n  \"CHANGE_UPDATE_ADMIN_ACCOUNT_PASS_REPEAT_FIELD\";\r\nexport const CHANGE_UPDATE_ADMIN_PHONE_FIELD =\r\n  \"CHANGE_UPDATE_ADMIN_PHONE_FIELD\";\r\n\r\nexport const RESET_EMAIL_SETTINGS_FIELDS = \"RESET_EMAIL_SETTINGS_FIELDS\";\r\nexport const RESET_ACCOUNT_SETTINGS_FIELDS = \"RESET_ACCOUNT_SETTINGS_FIELDS\";\r\n\r\nexport const SWITCH_EMAIL_UPDATE_SUCCESS = \"SWITCH_EMAIL_UPDATE_SUCCESS\";\r\nexport const SWITCH_EMAIL_UPDATE_SUCCESS_CLOSE =\r\n  \"SWITCH_EMAIL_UPDATE_SUCCESS_CLOSE\";\r\nexport const SWITCH_ACCOUNT_UPDATE_SUCCESS = \"SWITCH_ACCOUNT_UPDATE_SUCCESS\";\r\nexport const SWITCH_ACCOUNT_UPDATE_SUCCESS_CLOSE =\r\n  \"SWITCH_ACCOUNT_UPDATE_SUCCESS_CLOSE\";\r\n\r\nexport const CHANGE_UPDATE_TARIFFS_FIELD = \"CHANGE_UPDATE_TARIFFS_FIELD\";\r\nexport const SWITCH_TARIFFS_UPDATE_SUCCESS = \"SWITCH_TARIFFS_UPDATE_SUCCESS\";\r\nexport const SWITCH_TARIFFS_UPDATE_SUCCESS_CLOSE =\r\n  \"SWITCH_TARIFFS_UPDATE_SUCCESS_CLOSE\";\r\nexport const RESET_TARIFFS_FIELDS = \"RESET_TARIFFS_FIELDS\";\r\n\r\nexport const SWITCH_SETTINGS_SUCCESS = \"SWITCH_SETTINGS_SUCCESS\";\r\nexport const SWITCH_SETTINGS_SUCCESS_CLOSE = \"SWITCH_SETTINGS_SUCCESS_CLOSE\";\r\nexport const SWITCH_TARIFFS_SUCCESS = \"SWITCH_TARIFFS_SUCCESS\";\r\nexport const SWITCH_TARIFFS_SUCCESS_CLOSE = \"SWITCH_TARIFFS_SUCCESS_CLOSE\";\r\n\r\nexport const ACTION_TENANT_PENDING = \"ACTION_TENANT_PENDING\";\r\nexport const ACTION_TENANT_SUCCESS = \"ACTION_TENANT_SUCCESS\";\r\nexport const ACTION_TENANTS_FAILED = \"ACTION_TENANTS_FAILED\";\r\nexport const SENDING_EMAIL_PENDING = \"SENDING_EMAIL_PENDING\";\r\nexport const SENDING_EMAIL_SUCCESS = \"SENDING_EMAIL_SUCCESS\";\r\nexport const SENDING_EMAIL_ERROR = \"SENDING_EMAIL_ERROR\";\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\n// import CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MySnackbarContentWrapper from \"../../MySnackbarContentWrapper\";\r\nimport { BACKEND_URI } from \"../../../constants.js\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  openDeletePostSuccessPopUp,\r\n  closeDeletePostSuccessPopUp\r\n} from \"../actions\";\r\n//postS actions\r\nimport { selectEditPost } from \"../actions\";\r\nimport { RENDER_DELETE_POST } from \"../constants\";\r\nconst styles = {\r\n  card: {\r\n    marginBottom: 20\r\n  },\r\n  media: {\r\n    objectFit: \"cover\"\r\n  },\r\n  paper: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"column\",\r\n    marginRight: \"2%\",\r\n    padding: \"15px!important\",\r\n    paddingTop: \"20px\",\r\n    backgroundColor: \"rgba(255, 255, 255, 0)\",\r\n    boxShadow: \"none\",\r\n    // marginBottom: 15,\r\n    // marginLeft: 15\r\n  }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    snackDelete: state.postsReducer.snackDelete\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onDeleteSuccess: () => dispatch(openDeletePostSuccessPopUp()),\r\n    onDeleteSuccessClose: () => dispatch(closeDeletePostSuccessPopUp()),\r\n    onUpdatePostClick: id => dispatch(selectEditPost(id)),\r\n    renderDeletePost: post =>\r\n      dispatch({ type: RENDER_DELETE_POST, payload: post })\r\n  };\r\n};\r\n\r\nclass Post extends React.Component {\r\n  deletePost = () => {\r\n    fetch(`${BACKEND_URI}/deletepost`, {\r\n      method: \"delete\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        id: this.props.postID\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(response => this.props.renderDeletePost(response))\r\n      .then(() => this.props.onDeleteSuccess());\r\n  };\r\n  render() {\r\n    const { classes, title, body } = this.props;\r\n    return (\r\n      <Card className={classes.card}>\r\n        <CardActionArea>\r\n          {/* <CardMedia\r\n            component=\"img\"\r\n            alt=\"Contemplative Reptile\"\r\n            className={classes.media}\r\n            height=\"140\"\r\n            image=\"https://sun9-3.userapi.com/c635101/v635101442/2eb65/bByG-f1YjUU.jpg\"\r\n            title=\"Contemplative Reptile\"\r\n          /> */}\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n              {title}\r\n            </Typography>\r\n            <Typography\r\n              component=\"p\"\r\n              dangerouslySetInnerHTML={{ __html: body }}\r\n            />\r\n          </CardContent>\r\n        </CardActionArea>\r\n        <CardActions className=\"jcfe\">\r\n          {/* <Button size=\"small\" color=\"primary\">\r\n            Подробнее\r\n          </Button> */}\r\n          <Button\r\n            size=\"small\"\r\n            color=\"primary\"\r\n            onClick={() => this.props.onUpdatePostClick(this.props.postID)}\r\n          >\r\n            Редактировать\r\n          </Button>\r\n          <Button size=\"small\" color=\"secondary\" onClick={this.deletePost}>\r\n            Удалить\r\n          </Button>\r\n        </CardActions>\r\n        <Snackbar\r\n          anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n          open={this.props.snackDelete}\r\n          autoHideDuration={6000}\r\n          onClose={this.props.onDeleteSuccessClose}\r\n        >\r\n          <MySnackbarContentWrapper\r\n            onClose={this.props.onDeleteSuccessClose}\r\n            variant=\"success\"\r\n            message=\"Новость Удалена\"\r\n          />\r\n        </Snackbar>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nPost.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withStyles(styles)(Post));\r\n","import {\r\n  CHANGE_TITLE_FIELD,\r\n  CHANGE_BODY_FIELD,\r\n  REQUEST_POSTS_PENDING,\r\n  REQUEST_POSTS_FAILED,\r\n  REQUEST_POSTS_SUCCESS,\r\n  SELECT_LAST_POSTS_ON_LOAD,\r\n  OPEN_INSERT_POST_WINDOW,\r\n  CLOSE_INSERT_POST_WINDOW,\r\n  OPEN_EDIT_POST_WINDOW,\r\n  CLOSE_EDIT_POST_WINDOW,\r\n  SELECT_EDIT_POST,\r\n  CHANGE_EDIT_TITLE_FIELD,\r\n  CHANGE_EDIT_BODY_FIELD,\r\n  SWITCH_INSERTION_POST_SUCCESS,\r\n  SWITCH_UPDATE_POST_SUCCESS,\r\n  SWITCH_DELETE_POST_SUCCESS,\r\n  SWITCH_INSERTION_POST_SUCCESS_CLOSE,\r\n  SWITCH_UPDATE_POST_SUCCESS_CLOSE,\r\n  SWITCH_DELETE_POST_SUCCESS_CLOSE,\r\n  RESET_INSERT_POST_FIELDS,\r\n  RESET_UPDATE_POST_FIELDS\r\n} from \"./constants\";\r\nimport { BACKEND_URI } from \"../../constants\";\r\nexport const setTitleField = text => ({\r\n  type: CHANGE_TITLE_FIELD,\r\n  payload: text\r\n});\r\n\r\nexport const setBodyField = text => ({\r\n  type: CHANGE_BODY_FIELD,\r\n  payload: text\r\n});\r\n\r\nexport const setEditTitleField = text => ({\r\n  type: CHANGE_EDIT_TITLE_FIELD,\r\n  payload: text\r\n});\r\n\r\nexport const setEditBodyField = text => ({\r\n  type: CHANGE_EDIT_BODY_FIELD,\r\n  payload: text\r\n});\r\n\r\nexport const requestPosts = () => dispatch => {\r\n  dispatch({ type: REQUEST_POSTS_PENDING });\r\n  fetch(`${BACKEND_URI}/getposts`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify({\r\n      date: Date.now()\r\n    })\r\n  })\r\n    .then(response => response.json())\r\n    .then(data => dispatch({ type: REQUEST_POSTS_SUCCESS, payload: data }))\r\n    .then(data =>\r\n      dispatch({\r\n        type: SELECT_LAST_POSTS_ON_LOAD,\r\n        payload: data.payload\r\n      })\r\n    )\r\n    .catch(error => dispatch({ type: REQUEST_POSTS_FAILED, payload: error }));\r\n};\r\n\r\nexport const openInsertPostWindow = () => ({\r\n  type: OPEN_INSERT_POST_WINDOW,\r\n  payload: true\r\n});\r\n\r\nexport const openEditPostWindow = () => ({\r\n  type: OPEN_EDIT_POST_WINDOW,\r\n  payload: true\r\n});\r\n\r\nexport const closeInsertPostWindow = () => ({\r\n  type: CLOSE_INSERT_POST_WINDOW,\r\n  payload: false\r\n});\r\n\r\nexport const closeEditPostWindow = () => ({\r\n  type: CLOSE_EDIT_POST_WINDOW,\r\n  payload: false\r\n});\r\n\r\nexport const selectEditPost = id => ({\r\n  type: SELECT_EDIT_POST,\r\n  payload: id\r\n});\r\n\r\n//CHANGE\r\nexport const openInsertPostSuccessPopUp = () => ({\r\n  type: SWITCH_INSERTION_POST_SUCCESS,\r\n  payload: true\r\n});\r\n\r\nexport const openUpdatePostSuccessPopUp = () => ({\r\n  type: SWITCH_UPDATE_POST_SUCCESS,\r\n  payload: true\r\n});\r\n\r\nexport const openDeletePostSuccessPopUp = () => ({\r\n  type: SWITCH_DELETE_POST_SUCCESS,\r\n  payload: true\r\n});\r\n\r\nexport const closeInsertPostSuccessPopUp = () => ({\r\n  type: SWITCH_INSERTION_POST_SUCCESS_CLOSE,\r\n  payload: false\r\n});\r\n\r\nexport const closeUpdatePostSuccessPopUp = () => ({\r\n  type: SWITCH_UPDATE_POST_SUCCESS_CLOSE,\r\n  payload: false\r\n});\r\n\r\nexport const closeDeletePostSuccessPopUp = () => ({\r\n  type: SWITCH_DELETE_POST_SUCCESS_CLOSE,\r\n  payload: false\r\n});\r\n\r\nexport const resetInsertPostFields = () => ({\r\n  type: RESET_INSERT_POST_FIELDS,\r\n  payload: \"\"\r\n});\r\n\r\nexport const resetUpdatePostFields = () => ({\r\n  type: RESET_UPDATE_POST_FIELDS,\r\n  payload: \"\"\r\n});\r\n","export const CHANGE_TITLE_FIELD = \"CHANGE_TITLE_FIELD\";\r\nexport const CHANGE_BODY_FIELD = \"CHANGE_BODY_FIELD\";\r\nexport const REQUEST_POSTS_PENDING = \"REQUEST_POSTS_PENDING\";\r\nexport const REQUEST_POSTS_SUCCESS = \"REQUEST_POSTS_SUCCESS\";\r\nexport const REQUEST_POSTS_FAILED = \"REQUEST_POSTS_FAILED\";\r\nexport const SELECT_LAST_POSTS_ON_LOAD = \"SELECT_LAST_POSTS_ON_LOAD\";\r\n\r\nexport const OPEN_INSERT_POST_WINDOW = \"OPEN_INSERT_POST_WINDOW\";\r\nexport const CLOSE_INSERT_POST_WINDOW = \"CLOSE_INSERT_POST_WINDOW\";\r\nexport const OPEN_EDIT_POST_WINDOW = \"OPEN_EDIT_POST_WINDOW\";\r\nexport const CLOSE_EDIT_POST_WINDOW = \"CLOSE_EDIT_POST_WINDOW\";\r\nexport const SELECT_EDIT_POST = \"SELECT_EDIT_POST\";\r\n\r\nexport const CHANGE_EDIT_TITLE_FIELD = \"CHANGE_EDIT_TITLE_FIELD\";\r\nexport const CHANGE_EDIT_BODY_FIELD = \"CHANGE_EDIT_BODY_FIELD\";\r\n\r\nexport const SWITCH_INSERTION_POST_SUCCESS = \"SWITCH_INSERTION_POST_SUCCESS\";\r\nexport const SWITCH_UPDATE_POST_SUCCESS = \"SWITCH_UPDATE_POST_SUCCESS\";\r\nexport const SWITCH_DELETE_POST_SUCCESS = \"SWITCH_DELETE_POST_SUCCESS\";\r\n\r\nexport const SWITCH_INSERTION_POST_SUCCESS_CLOSE =\r\n  \"SWITCH_INSERTION_POST_SUCCESS_CLOSE\";\r\nexport const SWITCH_UPDATE_POST_SUCCESS_CLOSE =\r\n  \"SWITCH_UPDATE_POST_SUCCESS_CLOSE\";\r\nexport const SWITCH_DELETE_POST_SUCCESS_CLOSE =\r\n  \"SWITCH_DELETE_POST_SUCCESS_CLOSE\";\r\n\r\nexport const RESET_INSERT_POST_FIELDS = \"RESET_INSERT_POST_FIELDS\";\r\nexport const RESET_UPDATE_POST_FIELDS = \"RESET_UPDATE_POST_FIELDS\";\r\nexport const RENDER_NEW_POST = \"RENDER_NEW_POST\";\r\nexport const RENDER_UPDATE_POST = \"RENDER_UPDATE_POST\";\r\nexport const RENDER_DELETE_POST = \"RENDER_DELETE_POST\";;\r\n","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n// import Dropzone from \"react-dropzone\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MySnackbarContentWrapper from \"../MySnackbarContentWrapper\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  setTitleField,\r\n  setBodyField,\r\n  requestPosts,\r\n  openInsertPostWindow,\r\n  closeInsertPostWindow,\r\n  openEditPostWindow,\r\n  closeEditPostWindow,\r\n  setEditTitleField,\r\n  setEditBodyField,\r\n  openInsertPostSuccessPopUp,\r\n  openUpdatePostSuccessPopUp,\r\n  openDeletePostSuccessPopUp,\r\n  closeInsertPostSuccessPopUp,\r\n  closeUpdatePostSuccessPopUp,\r\n  closeDeletePostSuccessPopUp,\r\n  resetInsertPostFields,\r\n  resetUpdatePostFields\r\n} from \"./actions\";\r\nimport { RENDER_NEW_POST, RENDER_UPDATE_POST } from \"./constants\";\r\nimport ReactQuill from \"react-quill\";\r\nimport { BACKEND_URI } from \"../../constants\";\r\nimport Post from \"./Post\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    height: 440,\r\n    zIndex: 1,\r\n    overflow: \"hidden\",\r\n    position: \"relative\",\r\n    display: \"flex\"\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.default,\r\n    paddingTop: theme.spacing.unit * 3,\r\n    minWidth: 0,\r\n    overflowY: \"scroll\", // So the Typography noWrap works\r\n    marginTop: 40\r\n  },\r\n  fab: {\r\n    position: \"absolute\",\r\n    bottom: theme.spacing.unit * 4,\r\n    right: theme.spacing.unit * 4\r\n  },\r\n  paper: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"column\",\r\n    marginRight: \"2%\",\r\n    padding: \"15px!important\",\r\n    paddingTop: \"20px\",\r\n    backgroundColor: \"rgba(255, 255, 255, 0)\",\r\n    boxShadow: \"none\"\r\n    // marginBottom: 15,\r\n    // marginLeft: 15\r\n  }\r\n});\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    titleField: state.postsReducer.titleField,\r\n    bodyField: state.postsReducer.bodyField,\r\n    loadedPosts: state.postsReducer.loadedPosts,\r\n    insertWindowOpened: state.postsReducer.insertWindowOpened,\r\n    editWindowOpended: state.postsReducer.editWindowOpended,\r\n    editTitleField: state.postsReducer.editTitleField,\r\n    editBodyField: state.postsReducer.editBodyField,\r\n    editPostID: state.postsReducer.editPostID,\r\n    snackInsert: state.postsReducer.snackInsert,\r\n    snackUpdate: state.postsReducer.snackUpdate,\r\n    snackDelete: state.postsReducer.snackDelete\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onRequestPosts: () => dispatch(requestPosts()),\r\n    onTitleChange: event => dispatch(setTitleField(event.target.value)),\r\n    onEditTitleChange: event => dispatch(setEditTitleField(event.target.value)),\r\n    onBodyChange: value => dispatch(setBodyField(value)),\r\n    onEditBodyChange: value => dispatch(setEditBodyField(value)),\r\n    onOpenInsertPostWindow: () => dispatch(openInsertPostWindow()),\r\n    onCloseInsertPostWindow: () => dispatch(closeInsertPostWindow()),\r\n    onOpenEditPostWindow: () => dispatch(openEditPostWindow()),\r\n    onCloseEditPostWindow: () => dispatch(closeEditPostWindow()),\r\n    onInsertionSuccess: () => dispatch(openInsertPostSuccessPopUp()),\r\n    onUpdateSuccess: () => dispatch(openUpdatePostSuccessPopUp()),\r\n    onDeleteSuccess: () => dispatch(openDeletePostSuccessPopUp()),\r\n    onInsertionSuccessClose: () => dispatch(closeInsertPostSuccessPopUp()),\r\n    onUpdateSuccessClose: () => dispatch(closeUpdatePostSuccessPopUp()),\r\n    onDeleteSuccessClose: () => dispatch(closeDeletePostSuccessPopUp()),\r\n    onResetInsertPostFields: () => dispatch(resetInsertPostFields()),\r\n    onResetUpdatePostFields: () => dispatch(resetUpdatePostFields()),\r\n    renderNewPost: post => dispatch({ type: RENDER_NEW_POST, payload: post }),\r\n    renderUpdatePost: post =>\r\n      dispatch({ type: RENDER_UPDATE_POST, payload: post })\r\n  };\r\n};\r\nclass Posts extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { screen: \"EmailSender\" }; // You can also pass a Quill Delta here\r\n  }\r\n\r\n  onSubmitPost = () => {\r\n    fetch(`${BACKEND_URI}/addpost`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        title: this.props.titleField,\r\n        body: this.props.bodyField\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(response => this.props.renderNewPost(response))\r\n      .then(() => this.props.onInsertionSuccess())\r\n      .then(() => this.props.onResetInsertPostFields());\r\n  };\r\n  onSubmitUpdatePost = () => {\r\n    fetch(`${BACKEND_URI}/updatepost`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        id: this.props.editPostID,\r\n        title: this.props.editTitleField,\r\n        body: this.props.editBodyField\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(response => this.props.renderUpdatePost(response))\r\n      .then(() => this.props.onUpdateSuccess())\r\n      .then(() => this.props.onResetUpdatePostFields())\r\n      .catch(error => console.log(error));\r\n  };\r\n  scrollToMyRef = () => {\r\n    console.log(\"imhere\");\r\n    window.scroll({\r\n      top: 0,\r\n      behavior: \"smooth\"\r\n    });\r\n    console.log(\"done\");\r\n  };\r\n  componentDidMount() {\r\n    this.props.onRequestPosts();\r\n  }\r\n\r\n  modules = {\r\n    toolbar: [\r\n      [\"bold\", \"italic\", \"underline\", \"blockquote\"],\r\n      [{ list: \"ordered\" }, { list: \"bullet\" }],\r\n      [\"link\", \"video\"],\r\n      [\"clean\"]\r\n    ]\r\n  };\r\n\r\n  formats = [\r\n    \"bold\",\r\n    \"italic\",\r\n    \"underline\",\r\n    \"blockquote\",\r\n    \"list\",\r\n    \"bullet\",\r\n    \"link\",\r\n    \"video\"\r\n  ];\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      onTitleChange,\r\n      onBodyChange,\r\n      bodyField,\r\n      onEditBodyChange,\r\n      onEditTitleChange,\r\n      editTitleField,\r\n      subjectField,\r\n      insertWindowOpened,\r\n      editWindowOpended\r\n    } = this.props;\r\n    return (\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"center\"\r\n          alignItems=\"flex-start\"\r\n          ref={0}\r\n        >\r\n          <Grid item xs={8}>\r\n            {insertWindowOpened && (\r\n              <Paper className={classes.paper}>\r\n                <TextField\r\n                  id=\"insert-title-field\"\r\n                  label=\"Заголовок новости\"\r\n                  value={subjectField}\r\n                  margin=\"dense\"\r\n                  variant=\"filled\"\r\n                  onChange={onTitleChange}\r\n                />\r\n                <ReactQuill\r\n                  modules={this.modules}\r\n                  formats={this.formats}\r\n                  value={bodyField}\r\n                  onChange={onBodyChange}\r\n                />\r\n                <Button\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  onClick={this.onSubmitPost}\r\n                >\r\n                  Добавить новость\r\n                </Button>\r\n              </Paper>\r\n            )}\r\n            {editWindowOpended && (\r\n              <Paper className={classes.paper}>\r\n                <TextField\r\n                  id=\"edit-title-field\"\r\n                  label=\"Заголовок новости\"\r\n                  value={editTitleField}\r\n                  margin=\"dense\"\r\n                  variant=\"filled\"\r\n                  onChange={onEditTitleChange}\r\n                />\r\n                <ReactQuill\r\n                  modules={this.modules}\r\n                  formats={this.formats}\r\n                  value={this.props.editBodyField}\r\n                  onChange={onEditBodyChange}\r\n                />\r\n                <Button\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  onClick={this.onSubmitUpdatePost}\r\n                >\r\n                  Обновить новость\r\n                </Button>\r\n              </Paper>\r\n            )}\r\n            <Paper className={classes.paper}>\r\n              {this.props.loadedPosts.map(post => {\r\n                return (\r\n                  <Post\r\n                    title={post.title}\r\n                    body={post.body}\r\n                    postID={post._id}\r\n                    key={post._id}\r\n                  />\r\n                );\r\n              })}\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n        <Snackbar\r\n          anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n          open={this.props.snackMessageSend}\r\n          autoHideDuration={6000}\r\n          onClose={this.props.onMessageSendSuccessClose}\r\n          ContentProps={{ \"aria-describedby\": \"message-id\" }}\r\n        >\r\n          <MySnackbarContentWrapper\r\n            onClose={this.props.onMessageSendSuccessClose}\r\n            variant=\"success\"\r\n            message=\"Сообщения отправлены\"\r\n          />\r\n        </Snackbar>\r\n\r\n        {this.props.insertWindowOpened && !this.props.editWindowOpended && (\r\n          <Button\r\n            variant=\"fab\"\r\n            className={classes.fab}\r\n            color=\"primary\"\r\n            onClick={this.props.onCloseInsertPostWindow}\r\n          >\r\n            <CloseIcon />\r\n          </Button>\r\n        )}\r\n        {!this.props.insertWindowOpened && this.props.editWindowOpended && (\r\n          <Button\r\n            variant=\"fab\"\r\n            className={classes.fab}\r\n            color=\"primary\"\r\n            onClick={this.props.onCloseEditPostWindow}\r\n          >\r\n            <CloseIcon />\r\n          </Button>\r\n        )}\r\n        {!this.props.insertWindowOpened && !this.props.editWindowOpended && (\r\n          <Button\r\n            variant=\"fab\"\r\n            className={classes.fab}\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              this.props.onOpenInsertPostWindow();\r\n            }}\r\n          >\r\n            <AddIcon />\r\n          </Button>\r\n        )}\r\n        <Snackbar\r\n          anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n          open={this.props.snackInsert}\r\n          autoHideDuration={6000}\r\n          onClose={this.props.onInsertionSuccessClose}\r\n        >\r\n          {/* // ContentProps={{ \"aria-describedby\": \"message-id\" }} */}\r\n          <MySnackbarContentWrapper\r\n            onClose={this.props.onInsertionSuccessClose}\r\n            variant=\"success\"\r\n            message=\"Новость добавлена\"\r\n          />\r\n        </Snackbar>\r\n        <Snackbar\r\n          anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n          open={this.props.snackUpdate}\r\n          autoHideDuration={6000}\r\n          onClose={this.props.onUpdateSuccessClose}\r\n        >\r\n          {/* // ContentProps={{ \"aria-describedby\": \"message-id\" }} */}\r\n          <MySnackbarContentWrapper\r\n            onClose={this.props.onUpdateSuccessClose}\r\n            variant=\"success\"\r\n            message=\"Новость обновлена\"\r\n          />\r\n        </Snackbar>\r\n        <Snackbar\r\n          anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n          open={this.props.snackDelete}\r\n          autoHideDuration={6000}\r\n          onClose={this.props.onDeleteSuccessClose}\r\n        >\r\n          <MySnackbarContentWrapper\r\n            onClose={this.props.onDeleteSuccessClose}\r\n            variant=\"success\"\r\n            message=\"Новость Удалена\"\r\n          />\r\n        </Snackbar>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nPosts.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withStyles(styles)(Posts));\r\n","export const createTenantsStringArray = tenants => {\r\n  return Object.entries(tenants).map(\r\n    tenant => `${tenant[0]} ${tenant[1].name}`\r\n  );\r\n};\r\n\r\nexport const getTenantsObjectsFromSelected = (selectedArray, tenants) => {\r\n  return Object.keys(tenants)\r\n    .filter(homeNumber => {\r\n      return selectedArray\r\n        .map(tenant => {\r\n          return tenant\r\n            .trim()\r\n            .split(\" \")\r\n            .shift();\r\n        })\r\n        .includes(homeNumber);\r\n    })\r\n    .reduce((acc, homeNumber) => {\r\n      acc[homeNumber] = tenants[homeNumber];\r\n      return acc;\r\n    }, {});\r\n};\r\n","import {\r\n  REQUEST_TENANTS_FAILED,\r\n  REQUEST_TENANTS_SUCCESS,\r\n  REQUEST_TENANTS_PENDING,\r\n  CHANGE_SENDING_FILES,\r\n  REMOVE_SENDING_FILES,\r\n  CHANGE_INSERT_NAME_FIELD,\r\n  CHANGE_INSERT_EMAIL_FIELD,\r\n  CHANGE_INSERT_HOUSENUMBER_FIELD,\r\n  CHANGE_UPDATE_NAME_FIELD,\r\n  CHANGE_UPDATE_EMAIL_FIELD,\r\n  CHANGE_UPDATE_HOUSENUMBER_FIELD,\r\n  CHANGE_DELETE_HOUSENUMBER_FIELD,\r\n  CHANGE_MESSAGE_FIELD,\r\n  CHANGE_SUBJECT_FIELD,\r\n  CHANGE_SELECTED_TENANTS,\r\n  SELECT_ALL_TENANTS_ON_LOAD,\r\n  SWITCH_INSERTION_SUCCESS,\r\n  SWITCH_UPDATE_SUCCESS,\r\n  SWITCH_DELETE_SUCCESS,\r\n  SWITCH_MESSAGE_SEND_SUCCESS,\r\n  SWITCH_INSERTION_SUCCESS_CLOSE,\r\n  SWITCH_UPDATE_SUCCESS_CLOSE,\r\n  SWITCH_DELETE_SUCCESS_CLOSE,\r\n  SWITCH_MESSAGE_SEND_SUCCESS_CLOSE,\r\n  RESET_EMAIL_FIELDS,\r\n  RESET_TENANT_INSERT_FIELDS,\r\n  RESET_TENANT_UPDATE_FIELDS,\r\n  RESET_TENANT_DELETE_FIELDS,\r\n  CHANGE_UPDATE_ADMIN_EMAIL_FIELD,\r\n  CHANGE_UPDATE_ADMIN_MAIL_PASS_FIELD,\r\n  CHANGE_UPDATE_ADMIN_ACCOUNT_PASS_OLD_FIELD,\r\n  CHANGE_UPDATE_ADMIN_ACCOUNT_PASS_NEW_FIELD,\r\n  CHANGE_UPDATE_ADMIN_ACCOUNT_PASS_REPEAT_FIELD,\r\n  CHANGE_UPDATE_ADMIN_PHONE_FIELD,\r\n  RESET_EMAIL_SETTINGS_FIELDS,\r\n  RESET_ACCOUNT_SETTINGS_FIELDS,\r\n  SWITCH_EMAIL_UPDATE_SUCCESS,\r\n  SWITCH_EMAIL_UPDATE_SUCCESS_CLOSE,\r\n  SWITCH_ACCOUNT_UPDATE_SUCCESS,\r\n  SWITCH_ACCOUNT_UPDATE_SUCCESS_CLOSE,\r\n  CHANGE_UPDATE_TARIFFS_FIELD,\r\n  SWITCH_TARIFFS_UPDATE_SUCCESS,\r\n  SWITCH_TARIFFS_UPDATE_SUCCESS_CLOSE,\r\n  RESET_TARIFFS_FIELDS,\r\n  SWITCH_SETTINGS_SUCCESS,\r\n  SWITCH_SETTINGS_SUCCESS_CLOSE,\r\n  SWITCH_TARIFFS_SUCCESS,\r\n  SWITCH_TARIFFS_SUCCESS_CLOSE,\r\n  BACKEND_URI\r\n} from \"./constants.js\";\r\nimport { createTenantsStringArray } from \"./tenantsSupportFunctions\";\r\n\r\n//APP part\r\nexport const requestTenants = () => dispatch => {\r\n  dispatch({ type: REQUEST_TENANTS_PENDING });\r\n  fetch(`${BACKEND_URI}/tenants`)\r\n    .then(response => response.json())\r\n    .then(data => dispatch({ type: REQUEST_TENANTS_SUCCESS, payload: data }))\r\n    .then(data =>\r\n      dispatch({\r\n        type: SELECT_ALL_TENANTS_ON_LOAD,\r\n        payload: createTenantsStringArray(data.payload)\r\n      })\r\n    )\r\n    .catch(error => dispatch({ type: REQUEST_TENANTS_FAILED, payload: error }));\r\n};\r\n\r\nexport const changeTenants = tenants => ({\r\n  type: CHANGE_SELECTED_TENANTS,\r\n  payload: tenants\r\n});\r\n\r\nexport const selectAllTenants = tenants => ({\r\n  type: SELECT_ALL_TENANTS_ON_LOAD,\r\n  payload: Object.values(tenants).map(tenant => tenant.name)\r\n});\r\n//Tenant part\r\nexport const setInsertNameField = text => ({\r\n  type: CHANGE_INSERT_NAME_FIELD,\r\n  payload: text\r\n});\r\n\r\nexport const setInsertEmailField = text => ({\r\n  type: CHANGE_INSERT_EMAIL_FIELD,\r\n  payload: text\r\n});\r\n\r\nexport const setInsertHouseNumberField = text => ({\r\n  type: CHANGE_INSERT_HOUSENUMBER_FIELD,\r\n  payload: text\r\n});\r\n\r\nexport const setUpdateNameField = text => ({\r\n  type: CHANGE_UPDATE_NAME_FIELD,\r\n  payload: text\r\n});\r\n\r\nexport const setUpdateEmailField = text => ({\r\n  type: CHANGE_UPDATE_EMAIL_FIELD,\r\n  payload: text\r\n});\r\n\r\nexport const setUpdateHouseNumberField = text => ({\r\n  type: CHANGE_UPDATE_HOUSENUMBER_FIELD,\r\n  payload: text\r\n});\r\n\r\nexport const setDeleteHouseNumberField = text => ({\r\n  type: CHANGE_DELETE_HOUSENUMBER_FIELD,\r\n  payload: text\r\n});\r\n\r\n//Admin settings\r\n\r\nexport const setUpdateAdminEmail = text => ({\r\n  type: CHANGE_UPDATE_ADMIN_EMAIL_FIELD,\r\n  payload: text\r\n});\r\n\r\nexport const setUpdateAdminMailPass = text => ({\r\n  type: CHANGE_UPDATE_ADMIN_MAIL_PASS_FIELD,\r\n  payload: text\r\n});\r\n\r\nexport const setUpdateAdminAccountPassOld = text => ({\r\n  type: CHANGE_UPDATE_ADMIN_ACCOUNT_PASS_OLD_FIELD,\r\n  payload: text\r\n});\r\nexport const setUpdateAdminAccountPassNew = text => ({\r\n  type: CHANGE_UPDATE_ADMIN_ACCOUNT_PASS_NEW_FIELD,\r\n  payload: text\r\n});\r\nexport const setUpdateAdminAccountPassRepeat = text => ({\r\n  type: CHANGE_UPDATE_ADMIN_ACCOUNT_PASS_REPEAT_FIELD,\r\n  payload: text\r\n});\r\nexport const setUpdateAdminPhone = text => ({\r\n  type: CHANGE_UPDATE_ADMIN_PHONE_FIELD,\r\n  payload: text\r\n});\r\nexport const resetEmailSettingsField = () => ({\r\n  type: RESET_EMAIL_SETTINGS_FIELDS,\r\n  payload: \"\"\r\n});\r\nexport const resetAccountSettingsField = () => ({\r\n  type: RESET_ACCOUNT_SETTINGS_FIELDS,\r\n  payload: \"\"\r\n});\r\n\r\nexport const openEmailUpdateSuccessPopUp = () => ({\r\n  type: SWITCH_EMAIL_UPDATE_SUCCESS,\r\n  payload: true\r\n});\r\n\r\nexport const closeEmailUpdateSuccessPopUp = () => ({\r\n  type: SWITCH_EMAIL_UPDATE_SUCCESS_CLOSE,\r\n  payload: false\r\n});\r\n\r\nexport const openAccountUpdateSuccessPopUp = () => ({\r\n  type: SWITCH_ACCOUNT_UPDATE_SUCCESS,\r\n  payload: true\r\n});\r\n\r\nexport const closeAccountUpdateSuccessPopUp = () => ({\r\n  type: SWITCH_ACCOUNT_UPDATE_SUCCESS_CLOSE,\r\n  payload: false\r\n});\r\n\r\n//Tariffs\r\n\r\nexport const setUpdateTariffs = text => ({\r\n  type: CHANGE_UPDATE_TARIFFS_FIELD,\r\n  payload: text\r\n});\r\n\r\nexport const openUpdateTariffsSuccessPopUp = () => ({\r\n  type: SWITCH_TARIFFS_UPDATE_SUCCESS,\r\n  payload: true\r\n});\r\n\r\nexport const closeUpdateTariffsSuccessPopUp = () => ({\r\n  type: SWITCH_TARIFFS_UPDATE_SUCCESS_CLOSE,\r\n  payload: false\r\n});\r\n\r\nexport const resetTariffsField = () => ({\r\n  type: RESET_TARIFFS_FIELDS,\r\n  payload: \"\"\r\n});\r\n\r\n//Message part\r\nexport const setMessageField = text => ({\r\n  type: CHANGE_MESSAGE_FIELD,\r\n  payload: text\r\n});\r\n\r\nexport const setSubjectField = text => ({\r\n  type: CHANGE_SUBJECT_FIELD,\r\n  payload: text\r\n});\r\n\r\nexport const setSendingFiles = files => ({\r\n  type: CHANGE_SENDING_FILES,\r\n  payload: files\r\n});\r\n\r\nexport const removeSendingFiles = () => ({\r\n  type: REMOVE_SENDING_FILES,\r\n  payload: []\r\n});\r\n\r\n//Snackbars part\r\nexport const openInsertSuccessPopUp = () => ({\r\n  type: SWITCH_INSERTION_SUCCESS,\r\n  payload: true\r\n});\r\n\r\nexport const openUpdateSuccessPopUp = () => ({\r\n  type: SWITCH_UPDATE_SUCCESS,\r\n  payload: true\r\n});\r\n\r\nexport const openDeleteSuccessPopUp = () => ({\r\n  type: SWITCH_DELETE_SUCCESS,\r\n  payload: true\r\n});\r\n\r\nexport const openMessageSuccessPopUp = () => ({\r\n  type: SWITCH_MESSAGE_SEND_SUCCESS,\r\n  payload: true\r\n});\r\n\r\nexport const closeInsertSuccessPopUp = () => ({\r\n  type: SWITCH_INSERTION_SUCCESS_CLOSE,\r\n  payload: false\r\n});\r\n\r\nexport const closeUpdateSuccessPopUp = () => ({\r\n  type: SWITCH_UPDATE_SUCCESS_CLOSE,\r\n  payload: false\r\n});\r\n\r\nexport const closeDeleteSuccessPopUp = () => ({\r\n  type: SWITCH_DELETE_SUCCESS_CLOSE,\r\n  payload: false\r\n});\r\n\r\nexport const closeMessageSuccessPopUp = () => ({\r\n  type: SWITCH_MESSAGE_SEND_SUCCESS_CLOSE,\r\n  payload: false\r\n});\r\n\r\nexport const openSettingsSuccessPopUp = () => ({\r\n  type: SWITCH_SETTINGS_SUCCESS,\r\n  payload: true\r\n});\r\n\r\nexport const closeSettingsSuccessPopUp = () => ({\r\n  type: SWITCH_SETTINGS_SUCCESS_CLOSE,\r\n  payload: false\r\n});\r\nexport const openTariffsSuccessPopUp = () => ({\r\n  type: SWITCH_TARIFFS_SUCCESS,\r\n  payload: true\r\n});\r\n\r\nexport const closeTariffsSuccessPopUp = () => ({\r\n  type: SWITCH_TARIFFS_SUCCESS_CLOSE,\r\n  payload: false\r\n});\r\n\r\nexport const resetEmailFields = () => ({\r\n  type: RESET_EMAIL_FIELDS,\r\n  payload: \"\"\r\n});\r\nexport const resetInsertTenantFields = () => ({\r\n  type: RESET_TENANT_INSERT_FIELDS,\r\n  payload: \"\"\r\n});\r\nexport const resetUpdateTenantFields = () => ({\r\n  type: RESET_TENANT_UPDATE_FIELDS,\r\n  payload: \"\"\r\n});\r\nexport const resetDeleteTenantFields = () => ({\r\n  type: RESET_TENANT_DELETE_FIELDS,\r\n  payload: \"\"\r\n});\r\n","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MySnackbarContentWrapper from \"../MySnackbarContentWrapper\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { BACKEND_URI } from \"../../constants.js\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport {\r\n  setUpdateAdminEmail,\r\n  setUpdateAdminMailPass,\r\n  setUpdateAdminAccountPassOld,\r\n  setUpdateAdminAccountPassNew,\r\n  setUpdateAdminAccountPassRepeat,\r\n  setUpdateAdminPhone,\r\n  resetEmailSettingsField,\r\n  resetAccountSettingsField,\r\n  openEmailUpdateSuccessPopUp,\r\n  closeEmailUpdateSuccessPopUp,\r\n  openAccountUpdateSuccessPopUp,\r\n  closeAccountUpdateSuccessPopUp,\r\n  openSettingsSuccessPopUp,\r\n  closeSettingsSuccessPopUp\r\n} from \"../../actions\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    updateAdminEmailField: state.changeAdminInputs.updateAdminEmailField,\r\n    updateAdminMailPassField: state.changeAdminInputs.updateAdminMailPassField,\r\n    updateAdminAccountPassOldField:\r\n      state.changeAdminInputs.updateAdminAccountPassOldField,\r\n    updateAdminAccountPassNewField:\r\n      state.changeAdminInputs.updateAdminAccountPassNewField,\r\n    updateAdminAccountPassRepeatField:\r\n      state.changeAdminInputs.updateAdminAccountPassRepeatField,\r\n    updateAdminPhoneField: state.changeAdminInputs.updateAdminPhoneField,\r\n\r\n    snackSettings: state.handleSnackbars.snackSettings\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onUpdateAdminEmail: event =>\r\n      dispatch(setUpdateAdminEmail(event.target.value)),\r\n    onUpdateAdminMailPass: event =>\r\n      dispatch(setUpdateAdminMailPass(event.target.value)),\r\n    onUpdateAdminAccountPassOld: event =>\r\n      dispatch(setUpdateAdminAccountPassOld(event.target.value)),\r\n    onUpdateAdminAccountPassNew: event =>\r\n      dispatch(setUpdateAdminAccountPassNew(event.target.value)),\r\n    onUpdateAdminAccountPassRepeat: event =>\r\n      dispatch(setUpdateAdminAccountPassRepeat(event.target.value)),\r\n    onUpdateAdminPhone: event =>\r\n      dispatch(setUpdateAdminPhone(event.target.value)),\r\n\r\n    onResetAdminEmailSettings: () => dispatch(resetEmailSettingsField()),\r\n    onResetAdminAccountSettings: () => dispatch(resetAccountSettingsField()),\r\n\r\n    onEmailSettingsUpdateSuccess: () => dispatch(openEmailUpdateSuccessPopUp()),\r\n    onEmailSettingsUpdateSuccessClose: () =>\r\n      dispatch(closeEmailUpdateSuccessPopUp()),\r\n    onAccountSettingsUpdateSuccess: () =>\r\n      dispatch(openAccountUpdateSuccessPopUp()),\r\n    onAccountSettingsUpdateSuccessClose: () =>\r\n      dispatch(closeAccountUpdateSuccessPopUp()),\r\n\r\n    onSettingsSuccess: () => dispatch(openSettingsSuccessPopUp()),\r\n    onSettingsSuccessClose: () => dispatch(closeSettingsSuccessPopUp())\r\n  };\r\n};\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    height: 440,\r\n    zIndex: 1,\r\n    overflow: \"hidden\",\r\n    position: \"relative\",\r\n    display: \"flex\"\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.default,\r\n    paddingTop: theme.spacing.unit * 3,\r\n    minWidth: 0,\r\n    marginTop: 50,\r\n    overflowY: \"scroll\" // So the Typography noWrap works\r\n  },\r\n  paper: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"column\",\r\n    marginRight: \"2%\",\r\n    padding: \"15px!important\",\r\n    paddingTop: \"20px\",\r\n    backgroundColor: \"rgba(255, 255, 255, 0)\",\r\n    boxShadow: \"none\",\r\n    marginBottom: 15,\r\n    marginLeft: 15\r\n  }\r\n});\r\n\r\nclass Settings extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      error: \"\"\r\n    };\r\n  }\r\n  updateEmailSettings = () => {\r\n    fetch(`${BACKEND_URI}/updateemailcredentials`, {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        user: \"admin\",\r\n        email: this.props.updateAdminEmailField,\r\n        password: this.props.updateAdminMailPassField\r\n      })\r\n    })\r\n      .then(response => console.log(response))\r\n      .then(() => this.props.onSettingsSuccess())\r\n      .then(() => this.props.onEmailSettingsUpdateSuccess())\r\n      .then(() => this.props.onResetAdminEmailSettings());\r\n  };\r\n  updateAccountSettings = () => {\r\n    if (\r\n      this.props.updateAdminAccountPassNewField ===\r\n      this.props.updateAdminAccountPassRepeatField\r\n    ) {\r\n      fetch(`${BACKEND_URI}/changeaccountpassword`, {\r\n        method: \"put\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n          user: \"admin\",\r\n          currentPassword: this.props.updateAdminAccountPassOldField,\r\n          newPassword: this.props.updateAdminAccountPassNewField\r\n        })\r\n      })\r\n        .then(response => console.log(response))\r\n        .then(() => this.props.onSettingsSuccess())\r\n        .then(() => this.props.onAccountSettingsUpdateSuccess())\r\n        .then(() => this.props.onResetAdminAccountSettings());\r\n      this.setState({ error: \"\" });\r\n    } else {\r\n      this.setState({ error: \"Пароли не совпадают\" });\r\n    }\r\n  };\r\n  render() {\r\n    const {\r\n      classes,\r\n      onUpdateAdminEmail,\r\n      onUpdateAdminMailPass,\r\n      onUpdateAdminAccountPassNew,\r\n      onUpdateAdminAccountPassOld,\r\n      onUpdateAdminAccountPassRepeat,\r\n      onUpdateAdminPhone\r\n    } = this.props;\r\n\r\n    return (\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        <Grid container direction=\"column\" justify=\"start\">\r\n          <Grid item xs={4}>\r\n            <Paper className={classes.paper}>\r\n              <Typography variant=\"h5\" gutterBottom>\r\n                Настройки контактов\r\n              </Typography>\r\n              <TextField\r\n                id=\"admin-new-phone\"\r\n                label=\"Новый телефон\"\r\n                margin=\"dense\"\r\n                onChange={onUpdateAdminPhone}\r\n                value={this.props.updateAdminPhoneField}\r\n              />\r\n              <TextField\r\n                id=\"admin-new-email\"\r\n                label=\"Новый Email\"\r\n                margin=\"dense\"\r\n                onChange={onUpdateAdminEmail}\r\n                type=\"email\"\r\n                value={this.props.updateAdminEmailField}\r\n              />\r\n              <TextField\r\n                id=\"admin-new-mail-pass\"\r\n                label=\"Новый пароль почты\"\r\n                margin=\"dense\"\r\n                onChange={onUpdateAdminMailPass}\r\n                type=\"password\"\r\n                value={this.props.updateAdminMailPassField}\r\n              />\r\n              <Button\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                onClick={this.updateEmailSettings}\r\n              >\r\n                Применить\r\n              </Button>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            {this.state.error === \"\" ? (\r\n              <Paper className={classes.paper}>\r\n                <Typography variant=\"h5\" gutterBottom>\r\n                  Настройки Аккаунта\r\n                </Typography>\r\n                <TextField\r\n                  id=\"admin-old-account-pass\"\r\n                  label=\"Старый пароль\"\r\n                  margin=\"dense\"\r\n                  onChange={onUpdateAdminAccountPassOld}\r\n                  type=\"password\"\r\n                  value={this.props.updateAdminAccountPassOldField}\r\n                />\r\n                <TextField\r\n                  id=\"admin-new-account-pass\"\r\n                  label=\"Новый пароль\"\r\n                  margin=\"dense\"\r\n                  onChange={onUpdateAdminAccountPassNew}\r\n                  type=\"password\"\r\n                  value={this.props.updateAdminAccountPassNewField}\r\n                />\r\n                <TextField\r\n                  id=\"admin-repeat-account-pass\"\r\n                  label=\"Повторите пароль\"\r\n                  margin=\"dense\"\r\n                  onChange={onUpdateAdminAccountPassRepeat}\r\n                  type=\"password\"\r\n                  value={this.props.updateAdminAccountPassRepeatField}\r\n                />\r\n                <Button\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  onClick={this.updateAccountSettings}\r\n                >\r\n                  Применить\r\n                </Button>\r\n              </Paper>\r\n            ) : (\r\n              <Paper className=\"accountSettings\">\r\n                <Typography variant=\"h5\" gutterBottom>\r\n                  Настройки Аккаунта\r\n                </Typography>\r\n                <TextField\r\n                  id=\"admin-old-account-pass\"\r\n                  label=\"Старый пароль\"\r\n                  margin=\"dense\"\r\n                  onChange={onUpdateAdminAccountPassOld}\r\n                  type=\"password\"\r\n                  value={this.props.updateAdminAccountPassOldField}\r\n                />\r\n                <FormControl\r\n                  className={classes.formControl}\r\n                  error\r\n                  aria-describedby=\"component-error-text\"\r\n                >\r\n                  <InputLabel htmlFor=\"admin-new-account-pass\">\r\n                    Новый пароль\r\n                  </InputLabel>\r\n                  <Input\r\n                    id=\"admin-new-account-pass\"\r\n                    value={this.props.updateAdminAccountPassNewField}\r\n                    onChange={onUpdateAdminAccountPassNew}\r\n                    margin=\"dense\"\r\n                    type=\"password\"\r\n                  />\r\n                  <FormHelperText id=\"component-error-text\">\r\n                    Ошибка\r\n                  </FormHelperText>\r\n                </FormControl>\r\n\r\n                <FormControl\r\n                  className={classes.formControl}\r\n                  error\r\n                  aria-describedby=\"component-error-text\"\r\n                >\r\n                  <InputLabel htmlFor=\"admin-repeat-account-pass\">\r\n                    Повторите пароль\r\n                  </InputLabel>\r\n                  <Input\r\n                    id=\"admin-repeat-account-pass\"\r\n                    value={this.props.updateAdminAccountPassRepeatField}\r\n                    onChange={onUpdateAdminAccountPassRepeat}\r\n                    margin=\"dense\"\r\n                    type=\"password\"\r\n                  />\r\n                  <FormHelperText id=\"component-error-text\">\r\n                    Ошибка\r\n                  </FormHelperText>\r\n                </FormControl>\r\n                <Button\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  onClick={this.updateAccountSettings}\r\n                >\r\n                  Применить\r\n                </Button>\r\n              </Paper>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n        <Snackbar\r\n          anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n          open={this.props.snackSettings}\r\n          autoHideDuration={6000}\r\n          onClose={this.props.onSettingsSuccessClose}\r\n          ContentProps={{ \"aria-describedby\": \"message-id\" }}\r\n        >\r\n          <MySnackbarContentWrapper\r\n            onClose={this.props.onSettingsSuccessClose}\r\n            variant=\"success\"\r\n            message=\"Настройки изменены\"\r\n          />\r\n        </Snackbar>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nSettings.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withStyles(styles)(Settings));\r\n","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MySnackbarContentWrapper from \"../MySnackbarContentWrapper\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { BACKEND_URI } from \"../../constants.js\";\r\nimport {\r\n  setUpdateTariffs,\r\n  openUpdateTariffsSuccessPopUp,\r\n  closeUpdateTariffsSuccessPopUp,\r\n  resetTariffsField,\r\n  openTariffsSuccessPopUp,\r\n  closeTariffsSuccessPopUp\r\n} from \"../../actions\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    updateTariffsField: state.changeTariffsInputs.updateTariffsField,\r\n    snackTariffs: state.handleSnackbars.snackTariffs\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onUpdateTariffs: event => dispatch(setUpdateTariffs(event.target.value)),\r\n\r\n    onResetTariffs: () => dispatch(resetTariffsField()),\r\n\r\n    onUpdateTariffsSuccess: () => dispatch(openUpdateTariffsSuccessPopUp()),\r\n    onUpdateTariffsSuccessClose: () =>\r\n      dispatch(closeUpdateTariffsSuccessPopUp()),\r\n\r\n    onTariffsSuccess: () => dispatch(openTariffsSuccessPopUp()),\r\n    onTariffsSuccessClose: () => dispatch(closeTariffsSuccessPopUp())\r\n  };\r\n};\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    height: 440,\r\n    zIndex: 1,\r\n    overflow: \"hidden\",\r\n    position: \"relative\",\r\n    display: \"flex\"\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.default,\r\n    paddingTop: theme.spacing.unit * 3,\r\n    minWidth: 0,\r\n    marginTop: 50,\r\n    overflowY: \"scroll\" // So the Typography noWrap works\r\n  },\r\n  paper: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"column\",\r\n    marginRight: \"2%\",\r\n    padding: \"15px!important\",\r\n    paddingTop: \"20px\",\r\n    backgroundColor: \"rgba(255, 255, 255, 0)\",\r\n    boxShadow: \"none\",\r\n    marginBottom: 15,\r\n    marginLeft: 15\r\n  }\r\n});\r\n\r\nclass Tariffs extends React.Component {\r\n  updateTariffs = () => {\r\n    fetch(`${BACKEND_URI}/changetariffs`, {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        gas: \"100\"\r\n      })\r\n    })\r\n      .then(response => console.log(response))\r\n      .then(() => this.props.onTariffsSuccess())\r\n      .then(() => this.props.onUpdateTariffsSuccess())\r\n      .then(() => this.props.onResetTariffs());\r\n  };\r\n  render() {\r\n    const { classes, onUpdateTariffs } = this.props;\r\n\r\n    return (\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        <Grid container direction=\"column\" justify=\"start\">\r\n          <Grid item xs={4}>\r\n            <Paper className={classes.paper}>\r\n              <Typography variant=\"h5\" gutterBottom>\r\n                Тарифы\r\n              </Typography>\r\n              <TextField\r\n                id=\"new-tariff\"\r\n                label=\"Новый тариф\"\r\n                margin=\"dense\"\r\n                onChange={onUpdateTariffs}\r\n                value={this.props.updateTariffsField}\r\n              />\r\n              <Button\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                onClick={this.updateTariffs}\r\n              >\r\n                Применить\r\n              </Button>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n        <Snackbar\r\n          anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n          open={this.props.snackTariffs}\r\n          autoHideDuration={6000}\r\n          onClose={this.props.onTariffsSuccessClose}\r\n          ContentProps={{ \"aria-describedby\": \"message-id\" }}\r\n        >\r\n          <MySnackbarContentWrapper\r\n            onClose={this.props.onTariffsSuccessClose}\r\n            variant=\"success\"\r\n            message=\"Тарифы изменены\"\r\n          />\r\n        </Snackbar>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nTariffs.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withStyles(styles)(Tariffs));\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport SwipeableViews from \"react-swipeable-views\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { connect } from \"react-redux\";\r\nimport { BACKEND_URI } from \"../../constants.js\";\r\nimport { createTenantsStringArray } from \"../../tenantsSupportFunctions\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport {\r\n  ACTION_TENANT_PENDING,\r\n  ACTION_TENANT_SUCCESS,\r\n  ACTION_TENANTS_FAILED,\r\n  SELECT_ALL_TENANTS_ON_LOAD\r\n} from \"../../constants\";\r\nimport {\r\n  setInsertNameField,\r\n  setInsertEmailField,\r\n  setInsertHouseNumberField,\r\n  setUpdateNameField,\r\n  setUpdateEmailField,\r\n  setDeleteHouseNumberField,\r\n  openInsertSuccessPopUp,\r\n  openUpdateSuccessPopUp,\r\n  openDeleteSuccessPopUp,\r\n  closeInsertSuccessPopUp,\r\n  closeUpdateSuccessPopUp,\r\n  closeDeleteSuccessPopUp,\r\n  setUpdateHouseNumberField,\r\n  resetDeleteTenantFields,\r\n  resetUpdateTenantFields,\r\n  resetInsertTenantFields\r\n} from \"../../actions\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MySnackbarContentWrapper from \"../MySnackbarContentWrapper\";\r\nconst mapStateToProps = state => {\r\n  return {\r\n    insertNameField: state.changeTenantsInputs.insertNameField,\r\n    insertEmailField: state.changeTenantsInputs.insertEmailField,\r\n    insertHouseNumberField: state.changeTenantsInputs.insertHouseNumberField,\r\n    updateNameField: state.changeTenantsInputs.updateNameField,\r\n    updateHouseNumberField: state.changeTenantsInputs.updateHouseNumberField,\r\n    updateEmailField: state.changeTenantsInputs.updateEmailField,\r\n    deleteHouseNumberField: state.changeTenantsInputs.deleteHouseNumberField,\r\n    isTenantActionPending: state.requestTenants.isTenantActionPending,\r\n    snackInsert: state.handleSnackbars.snackInsert,\r\n    snackUpdate: state.handleSnackbars.snackUpdate,\r\n    snackDelete: state.handleSnackbars.snackDelete\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onInsertNameChange: event =>\r\n      dispatch(setInsertNameField(event.target.value)),\r\n    onInsertEmailChange: event =>\r\n      dispatch(setInsertEmailField(event.target.value)),\r\n    onInsertHouseNumberChange: event =>\r\n      dispatch(setInsertHouseNumberField(event.target.value)),\r\n    onUpdateNameChange: event =>\r\n      dispatch(setUpdateNameField(event.target.value)),\r\n    onUpdateEmailChange: event =>\r\n      dispatch(setUpdateEmailField(event.target.value)),\r\n    onUpdateHouseNumberChange: event =>\r\n      dispatch(setUpdateHouseNumberField(event.target.value)),\r\n    onDeleteHouseNumberChange: event =>\r\n      dispatch(setDeleteHouseNumberField(event.target.value)),\r\n    onInsertionSuccess: () => dispatch(openInsertSuccessPopUp()),\r\n    onUpdateSuccess: () => dispatch(openUpdateSuccessPopUp()),\r\n    onDeleteSuccess: () => dispatch(openDeleteSuccessPopUp()),\r\n    onInsertionSuccessClose: () => dispatch(closeInsertSuccessPopUp()),\r\n    onUpdateSuccessClose: () => dispatch(closeUpdateSuccessPopUp()),\r\n    onDeleteSuccessClose: () => dispatch(closeDeleteSuccessPopUp()),\r\n    onResetTenantInsertFields: () => dispatch(resetInsertTenantFields()),\r\n    onResetTenantUpdateFields: () => dispatch(resetUpdateTenantFields()),\r\n    onResetTenantDeleteFields: () => dispatch(resetDeleteTenantFields()),\r\n    actionTenantPending: () =>\r\n      dispatch({\r\n        type: ACTION_TENANT_PENDING\r\n      }),\r\n    actionTenantSuccess: data =>\r\n      dispatch({\r\n        type: ACTION_TENANT_SUCCESS,\r\n        payload: data\r\n      }),\r\n    loadTenants: data =>\r\n      dispatch({\r\n        type: SELECT_ALL_TENANTS_ON_LOAD,\r\n        payload: createTenantsStringArray(data.payload)\r\n      }),\r\n    loadTenantsError: error =>\r\n      dispatch({\r\n        type: ACTION_TENANTS_FAILED,\r\n        payload: error\r\n      })\r\n  };\r\n};\r\n\r\nfunction TabContainer({ children, dir }) {\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      dir={dir}\r\n      style={{\r\n        padding: 8 * 3,\r\n        display: \"flex\",\r\n        flexDirection: \"column\"\r\n      }}\r\n    >\r\n      {children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  dir: PropTypes.string.isRequired\r\n};\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    width: \"90%\"\r\n  },\r\n  progress: {\r\n    margin: theme.spacing.unit * 2\r\n  },\r\n  tabs: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    flexWrap: \"wrap\",\r\n    '&>div':{\r\n      width:\"100%\"\r\n    }\r\n  },\r\n  tabContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\"\r\n  },\r\n  tenants:{\r\n    marginTop: \"60px\",\r\n    marginBottom: \"0px\",\r\n    width: \"90%\"\r\n  }\r\n});\r\n\r\nclass FullWidthTabs extends React.Component {\r\n  state = {\r\n    value: 0\r\n  };\r\n\r\n  handleChange = (event, value) => {\r\n    this.setState({ value });\r\n  };\r\n\r\n  handleChangeIndex = index => {\r\n    this.setState({ value: index });\r\n  };\r\n\r\n  insertTenant = () => {\r\n    this.props.actionTenantPending();\r\n    fetch(`${BACKEND_URI}/tenantinsert`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        name: this.props.insertNameField,\r\n        email: this.props.insertEmailField,\r\n        houseNumber: this.props.insertHouseNumberField\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => this.props.actionTenantSuccess(data))\r\n      .then(data => this.props.loadTenants(data))\r\n      .then(() => this.props.onInsertionSuccess())\r\n      .then(() => this.props.onResetTenantInsertFields())\r\n      .catch(error => this.props.loadTenantsError(error));\r\n  };\r\n\r\n  updateTenant = () => {\r\n    this.props.actionTenantPending();\r\n    fetch(`${BACKEND_URI}/tenantupdate`, {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        name: this.props.updateNameField,\r\n        email: this.props.updateEmailField,\r\n        houseNumber: this.props.updateHouseNumberField\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => this.props.actionTenantSuccess(data))\r\n      .then(data => this.props.loadTenants(data))\r\n      .then(() => this.props.onUpdateSuccess())\r\n      .then(() => this.props.onResetTenantUpdateFields())\r\n      .catch(error => this.props.loadTenantsError(error));\r\n  };\r\n\r\n  deleteTenant = () => {\r\n    this.props.actionTenantPending();\r\n    fetch(`${BACKEND_URI}/tenantdelete`, {\r\n      method: \"delete\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        houseNumber: this.props.deleteHouseNumberField\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => this.props.actionTenantSuccess(data))\r\n      .then(data => this.props.loadTenants(data))\r\n      .then(() => this.props.onDeleteSuccess())\r\n      .then(() => this.props.onResetTenantDeleteFields())\r\n      .catch(error => this.props.loadTenantsError(error));\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      theme,\r\n      onInsertNameChange,\r\n      onInsertEmailChange,\r\n      onInsertHouseNumberChange,\r\n      onUpdateNameChange,\r\n      onUpdateEmailChange,\r\n      onDeleteHouseNumberChange,\r\n      onUpdateHouseNumberChange\r\n    } = this.props;\r\n    if (this.props.isTenantActionPending) {\r\n      return (\r\n        <div>\r\n          <CircularProgress className={classes.progress} />\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className={classes.tenants}>\r\n          <AppBar position=\"static\" color=\"default\">\r\n            <Tabs\r\n              className={classes.tabs}\r\n              value={this.state.value}\r\n              onChange={this.handleChange}\r\n              indicatorColor=\"primary\"\r\n              textColor=\"primary\"\r\n              fullWidth\r\n            >\r\n              <Tab className=\"tab\" label=\"Добавить\" />\r\n              <Tab className=\"tab\" label=\"Изменить\" />\r\n              <Tab className=\"tab\" label=\"Удалить\" />\r\n            </Tabs>\r\n          </AppBar>\r\n          <SwipeableViews\r\n            axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\r\n            index={this.state.value}\r\n            onChangeIndex={this.handleChangeIndex}\r\n            className={classes.tabs}\r\n          >\r\n            <TabContainer\r\n              dir={theme.direction}\r\n              className={classes.tabContainer}\r\n            >\r\n              <TextField\r\n                id=\"insert-number\"\r\n                label=\"№Дома\"\r\n                margin=\"dense\"\r\n                onChange={onInsertHouseNumberChange}\r\n                type=\"number\"\r\n                value={this.props.insertHouseNumberField}\r\n              />\r\n              <TextField\r\n                id=\"insert-fio\"\r\n                label=\"ФИО\"\r\n                margin=\"dense\"\r\n                onChange={onInsertNameChange}\r\n                value={this.props.insertNameField}\r\n              />\r\n\r\n              <TextField\r\n                id=\"insert-email\"\r\n                label=\"Email\"\r\n                margin=\"dense\"\r\n                onChange={onInsertEmailChange}\r\n                type=\"email\"\r\n                value={this.props.insertEmailField}\r\n              />\r\n              <Button\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                onClick={this.insertTenant}\r\n              >\r\n                Добавить жильца\r\n              </Button>\r\n            </TabContainer>\r\n            <TabContainer\r\n              dir={theme.direction}\r\n              className={classes.tabContainer}\r\n            >\r\n              <TextField\r\n                id=\"update-housenumber\"\r\n                label=\"№Дома\"\r\n                margin=\"dense\"\r\n                onChange={onUpdateHouseNumberChange}\r\n                value={this.props.updateHouseNumberField}\r\n              />\r\n              <TextField\r\n                id=\"update-name\"\r\n                label=\"ФИО\"\r\n                margin=\"dense\"\r\n                onChange={onUpdateNameChange}\r\n                value={this.props.updateNameField}\r\n              />\r\n              <TextField\r\n                id=\"update-email\"\r\n                label=\"Email\"\r\n                margin=\"dense\"\r\n                onChange={onUpdateEmailChange}\r\n                type=\"email\"\r\n                value={this.props.updateEmailField}\r\n              />\r\n              <Button\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                onClick={this.updateTenant}\r\n              >\r\n                Изменить жильца\r\n              </Button>\r\n            </TabContainer>\r\n            <TabContainer\r\n              dir={theme.direction}\r\n              className={classes.tabContainer}\r\n            >\r\n              <TextField\r\n                id=\"delete-number\"\r\n                label=\"№Дома\"\r\n                type=\"number\"\r\n                margin=\"dense\"\r\n                onChange={onDeleteHouseNumberChange}\r\n                value={this.props.deleteHouseNumberField}\r\n              />\r\n              <Button\r\n                color=\"secondary\"\r\n                className={classes.button}\r\n                onClick={this.deleteTenant}\r\n              >\r\n                Удалить жильца\r\n              </Button>\r\n            </TabContainer>\r\n          </SwipeableViews>\r\n          <Snackbar\r\n            anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n            open={this.props.snackInsert}\r\n            autoHideDuration={6000}\r\n            onClose={this.props.onInsertionSuccessClose}\r\n            ContentProps={{ \"aria-describedby\": \"message-id\" }}\r\n          >\r\n            <MySnackbarContentWrapper\r\n              onClose={this.props.onInsertionSuccessClose}\r\n              variant=\"success\"\r\n              message=\"Пользователь успешно добавлен\"\r\n            />\r\n          </Snackbar>\r\n          <Snackbar\r\n            anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n            open={this.props.snackUpdate}\r\n            autoHideDuration={6000}\r\n            onClose={this.props.onUpdateSuccessClose}\r\n            ContentProps={{ \"aria-describedby\": \"message-id\" }}\r\n          >\r\n            <MySnackbarContentWrapper\r\n              onClose={this.props.onUpdateSuccessClose}\r\n              variant=\"success\"\r\n              message=\"Пользователь успешно обновлен\"\r\n            />\r\n          </Snackbar>\r\n          <Snackbar\r\n            anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n            open={this.props.snackDelete}\r\n            autoHideDuration={6000}\r\n            onClose={this.props.onDeleteSuccessClose}\r\n            ContentProps={{ \"aria-describedby\": \"message-id\" }}\r\n          >\r\n            <MySnackbarContentWrapper\r\n              onClose={this.props.onDeleteSuccessClose}\r\n              variant=\"success\"\r\n              message=\"Пользователь успешно удален\"\r\n            />\r\n          </Snackbar>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nFullWidthTabs.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withStyles(styles, { withTheme: true })(FullWidthTabs));\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport FullWidthTabs from \"../FullWidthTabs\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { changeTenants, requestTenants, selectAllTenants } from \"../../actions\";\r\nimport { connect } from \"react-redux\";\r\nconst mapStateToProps = state => {\r\n  return {\r\n    selectedTenants: state.requestTenants.selectedTenants,\r\n    tenants: state.requestTenants.tenants,\r\n    tenantsArray: state.requestTenants.tenantsArray,\r\n    isPending: state.requestTenants.isPending,\r\n    error: state.requestTenants.error\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onTenantChange: event => dispatch(changeTenants(event.target.value)),\r\n    onRequestTenants: () => dispatch(requestTenants()),\r\n    onSelectAllTenants: tenants => dispatch(selectAllTenants(tenants))\r\n  };\r\n};\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    // flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n    // flexDirection: \"row\",\r\n    justifyContent: \"center\"\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing.unit,\r\n    minWidth: 120,\r\n    maxWidth: 300,\r\n    marginTop: 20,\r\n    paddingTop: 10\r\n  },\r\n  chips: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  chip: {\r\n    margin: theme.spacing.unit / 4\r\n  },\r\n  selectedName: {\r\n    width: \"90%\"\r\n  },\r\n  paper: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"column\",\r\n    marginRight: \"2%\",\r\n    padding: \"15px!important\",\r\n    paddingTop: \"20px\",\r\n    backgroundColor: \"rgba(255, 255, 255, 0)\",\r\n    boxShadow: \"none\"\r\n  }\r\n});\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250\r\n    }\r\n  }\r\n};\r\n\r\nclass MultipleSelect extends React.Component {\r\n  componentDidMount() {\r\n    this.props.onRequestTenants();\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      onTenantChange,\r\n      selectedTenants,\r\n      tenantsArray\r\n    } = this.props;\r\n    return (\r\n      <Paper className={classes.paper}>\r\n        <div className={classes.root}>\r\n          <FormControl className={classes.selectedName}>\r\n            <InputLabel htmlFor=\"select-multiple-chip\">Получатели</InputLabel>\r\n            <Select\r\n              multiple\r\n              value={selectedTenants}\r\n              onChange={onTenantChange}\r\n              input={<Input id=\"select-multiple-chip\" />}\r\n              renderValue={selected => (\r\n                <div className={classes.chips}>\r\n                  {selected.map(value => (\r\n                    <Chip key={value} label={value} className={classes.chip} />\r\n                  ))}\r\n                </div>\r\n              )}\r\n              MenuProps={MenuProps}\r\n            >\r\n              {tenantsArray.map(selectedTenant => (\r\n                <MenuItem key={selectedTenant} value={selectedTenant}>\r\n                  {selectedTenant}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n          <FullWidthTabs />\r\n        </div>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nMultipleSelect.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withStyles(styles, { withTheme: true })(MultipleSelect));\r\n","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport MultipleSelect from \"../MultipleSelect\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport MySnackbarContentWrapper from \"../MySnackbarContentWrapper\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  BACKEND_URI,\r\n  SENDING_EMAIL_PENDING,\r\n  SENDING_EMAIL_SUCCESS,\r\n  SENDING_EMAIL_ERROR\r\n} from \"../../constants.js\";\r\nimport {\r\n  setSubjectField,\r\n  setMessageField,\r\n  setSendingFiles,\r\n  removeSendingFiles,\r\n  closeMessageSuccessPopUp,\r\n  openMessageSuccessPopUp,\r\n  resetEmailFields\r\n} from \"../../actions\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    height: 440,\r\n    zIndex: 1,\r\n    overflow: \"hidden\",\r\n    position: \"relative\",\r\n    display: \"flex\"\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.default,\r\n    paddingTop: theme.spacing.unit * 3,\r\n    minWidth: 0,\r\n    overflowY: \"scroll\",\r\n    marginTop: 40 // So the Typography noWrap works\r\n  },\r\n  dropZone: {\r\n    position: \"relative\",\r\n    width: \"100%\",\r\n    height: \"200px\",\r\n    borderWidth: \"2px\",\r\n    borderColor: \"rgba(102, 102, 102, 0.5)\",\r\n    borderStyle: \"dashed\",\r\n    borderRadius: \"5px\",\r\n    fontFamily: \"Roboto\",\r\n    padding: \"10px\",\r\n    boxSizing: \"border-box\",\r\n    marginBottom: \"10px\"\r\n  },\r\n  paper: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"column\",\r\n    marginRight: \"2%\",\r\n    padding: \"15px!important\",\r\n    paddingTop: \"20px\",\r\n    backgroundColor: \"rgba(255, 255, 255, 0)\",\r\n    boxShadow: \"none\"\r\n  }\r\n});\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    subjectField: state.changeEmailInputs.subjectField,\r\n    messageField: state.changeEmailInputs.messageField,\r\n    files: state.changeEmailInputs.files,\r\n    selectedTenantsObject: state.requestTenants.selectedTenantsObject,\r\n    snackMessageSend: state.handleSnackbars.snackMessageSend,\r\n    isEmailPending: state.changeEmailInputs.isEmailPending\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onMessageChange: event => dispatch(setMessageField(event.target.value)),\r\n    onSubjectChange: event => dispatch(setSubjectField(event.target.value)),\r\n    onDrop: files => dispatch(setSendingFiles(files)),\r\n    onCancel: () => dispatch(removeSendingFiles()),\r\n    onMessageSendSuccess: () => dispatch(openMessageSuccessPopUp()),\r\n    onMessageSendSuccessClose: () => dispatch(closeMessageSuccessPopUp()),\r\n    onResetMessageFields: () => dispatch(resetEmailFields()),\r\n    sendingEmailPending: () => dispatch({ type: SENDING_EMAIL_PENDING }),\r\n    sendingEmailSuccess: () => dispatch({ type: SENDING_EMAIL_SUCCESS }),\r\n    sendingEmailError: error =>\r\n      dispatch({ type: SENDING_EMAIL_ERROR, payload: error })\r\n  };\r\n};\r\n\r\nclass EmailSender extends React.Component {\r\n  onSubmit = () => {\r\n    let formData = new FormData();\r\n    this.props.files.forEach(file => {\r\n      formData.append(`${file.name}`, file);\r\n    });\r\n    formData.append(\"subject\", this.props.subjectField);\r\n    formData.append(\"message\", this.props.messageField);\r\n    Object.entries(this.props.selectedTenantsObject).forEach(tenant => {\r\n      formData.append(`${tenant[0]}name`, tenant[1].name);\r\n      formData.append(`${tenant[0]}email`, tenant[1].email);\r\n    });\r\n    //TODO: change function name\r\n    this.props.sendingEmailPending();\r\n    fetch(`${BACKEND_URI}/mail`, { method: \"POST\", body: formData })\r\n      //TODO CHANGE FUNCTIONS\r\n      .then(response => response.json())\r\n      .then(() => this.props.sendingEmailSuccess())\r\n      .then(() => this.props.onMessageSendSuccess())\r\n      .then(() => this.props.onResetMessageFields())\r\n      //TODO ERROR\r\n      .catch(error => this.props.sendingEmailError(error));\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      onMessageChange,\r\n      onSubjectChange,\r\n      onDrop,\r\n      onCancel,\r\n      files\r\n    } = this.props;\r\n    return (\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"center\"\r\n          alignItems=\"flex-start\"\r\n        >\r\n          <Grid item xs={8}>\r\n            <Paper className={classes.paper}>\r\n              <TextField\r\n                id=\"standard-dense\"\r\n                label=\"Тема сообщения\"\r\n                value={this.props.subjectField}\r\n                margin=\"dense\"\r\n                variant=\"filled\"\r\n                onChange={onSubjectChange}\r\n              />\r\n              <TextField\r\n                id=\"filled-multiline-static\"\r\n                label=\"Сообщение\"\r\n                multiline\r\n                rows=\"15\"\r\n                className={classes.textField}\r\n                margin=\"normal\"\r\n                variant=\"filled\"\r\n                value={this.props.messageField}\r\n                onChange={onMessageChange}\r\n              />\r\n              <section>\r\n                <div>\r\n                  <Dropzone\r\n                    className={classes.dropZone}\r\n                    onDrop={onDrop.bind(this)}\r\n                    onFileDialogCancel={onCancel.bind(this)}\r\n                  >\r\n                    <p className=\"dropboxtext\">\r\n                      Перенесите сюда или выбирите файлы для загрузки.\r\n                    </p>\r\n                  </Dropzone>\r\n                </div>\r\n                {!(files.length < 1) ? (\r\n                  <aside className=\"filestosend\">\r\n                    <h2>Отправляемые файлы</h2>\r\n                    <ul>\r\n                      {files.map(f => (\r\n                        <li key={f.name}>\r\n                          {f.name} - {f.size} bytes\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  </aside>\r\n                ) : (\r\n                  <aside />\r\n                )}\r\n              </section>\r\n              {this.props.isEmailPending ? (\r\n                <div>\r\n                  <CircularProgress className={classes.progress} />\r\n                </div>\r\n              ) : (\r\n                <Button\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  onClick={this.onSubmit}\r\n                >\r\n                  Отправить\r\n                </Button>\r\n              )}\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <MultipleSelect />\r\n          </Grid>\r\n        </Grid>\r\n        <Snackbar\r\n          anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n          open={this.props.snackMessageSend}\r\n          autoHideDuration={6000}\r\n          onClose={this.props.onMessageSendSuccessClose}\r\n          ContentProps={{ \"aria-describedby\": \"message-id\" }}\r\n        >\r\n          <MySnackbarContentWrapper\r\n            onClose={this.props.onMessageSendSuccessClose}\r\n            variant=\"success\"\r\n            message=\"Сообщения отправлены\"\r\n          />\r\n        </Snackbar>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nEmailSender.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withStyles(styles)(EmailSender));\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport EmailIcon from \"@material-ui/icons/Email\";\r\nimport MoneyIcon from \"@material-ui/icons/MonetizationOn\";\r\nimport ContactIcon from \"@material-ui/icons/ContactMail\";\r\nimport NewsIcon from \"@material-ui/icons/FormatAlignLeft\";\r\nimport Posts from \"../Posts\";\r\nimport { connect } from \"react-redux\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport Settings from \"../Settings\";\r\nimport Tariffs from \"../Tariffs\";\r\nimport {\r\n  setSubjectField,\r\n  setMessageField,\r\n  setSendingFiles,\r\n  removeSendingFiles,\r\n  closeMessageSuccessPopUp,\r\n  openMessageSuccessPopUp,\r\n  resetEmailFields\r\n} from \"../../actions\";\r\nimport EmailSender from \"../EmailSender\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    subjectField: state.changeEmailInputs.subjectField,\r\n    messageField: state.changeEmailInputs.messageField,\r\n    files: state.changeEmailInputs.files,\r\n    selectedTenantsObject: state.requestTenants.selectedTenantsObject,\r\n    snackMessageSend: state.handleSnackbars.snackMessageSend\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onMessageChange: event => dispatch(setMessageField(event.target.value)),\r\n    onSubjectChange: event => dispatch(setSubjectField(event.target.value)),\r\n    onDrop: files => dispatch(setSendingFiles(files)),\r\n    onCancel: () => dispatch(removeSendingFiles()),\r\n    onMessageSendSuccess: () => dispatch(openMessageSuccessPopUp()),\r\n    onMessageSendSuccessClose: () => dispatch(closeMessageSuccessPopUp()),\r\n    onResetMessageFields: () => dispatch(resetEmailFields())\r\n  };\r\n};\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    zIndex: 1,\r\n    overflow: \"hidden\",\r\n    position: \"relative\",\r\n    display: \"flex\",\r\n    height: \"100%\"\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    width: drawerWidth,\r\n    padding: '5px'\r\n  },\r\n  typography: {\r\n    useNextVariants: true\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.default,\r\n    paddingTop: theme.spacing.unit * 3,\r\n    minWidth: 0,\r\n    overflowY: \"scroll\" // So the Typography noWrap works\r\n  },\r\n  toolbar: theme.mixins.toolbar\r\n});\r\n\r\nclass ClippedDrawer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { text: \"\", screen: \"EmailSender\" }; // You can also pass a Quill Delta here\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(value) {\r\n    this.setState({ text: value });\r\n  }\r\n\r\n  modules = {\r\n    toolbar: [\r\n      [{ header: [1, 2, false] }],\r\n      [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\r\n      [\r\n        { list: \"ordered\" },\r\n        { list: \"bullet\" },\r\n        { indent: \"-1\" },\r\n        { indent: \"+1\" }\r\n      ],\r\n      [\"link\", \"image\"],\r\n      [\"clean\"]\r\n    ]\r\n  };\r\n\r\n  formats = [\r\n    \"header\",\r\n    \"bold\",\r\n    \"italic\",\r\n    \"underline\",\r\n    \"blockquote\",\r\n    \"list\",\r\n    \"bullet\",\r\n    \"link\",\r\n    \"image\"\r\n  ];\r\n\r\n  onClickEmailSender = e => {\r\n    this.setState({ screen: \"EmailSender\" });\r\n  };\r\n  onClickNews = e => {\r\n    this.setState({ screen: \"News\" });\r\n  };\r\n  onClickTariffs = e => {\r\n    this.setState({ screen: \"Tariffs\" });\r\n  };\r\n  onClickSettings = e => {\r\n    this.setState({ screen: \"Settings\" });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar position=\"absolute\" className={classes.appBar}>\r\n          <Toolbar>\r\n            <Typography variant=\"title\" color=\"inherit\" noWrap>\r\n              Красное озеро\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer variant=\"permanent\" classes={{ paper: classes.drawerPaper }}>\r\n          <div className={classes.toolbar} />\r\n          <ListItem button onClick={this.onClickEmailSender}>\r\n            <ListItemIcon>\r\n              <EmailIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Рассылка\" />\r\n          </ListItem>\r\n          <ListItem button onClick={this.onClickNews}>\r\n            <ListItemIcon>\r\n              <NewsIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Новости\" />\r\n          </ListItem>\r\n          <ListItem button onClick={this.onClickTariffs}>\r\n            <ListItemIcon>\r\n              <MoneyIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Тарифы\" />\r\n          </ListItem>\r\n          <ListItem button onClick={this.onClickSettings}>\r\n            <ListItemIcon>\r\n              <ContactIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Настройки\" />\r\n          </ListItem>\r\n        </Drawer>\r\n        {this.state.screen === \"EmailSender\" && <EmailSender />}\r\n        {this.state.screen === \"News\" && <Posts />}\r\n        {this.state.screen === \"Tariffs\" && <Tariffs />}\r\n        {this.state.screen === \"Settings\" && <Settings />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nClippedDrawer.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withStyles(styles)(ClippedDrawer));\r\n// export default ClippedDrawer;\r\n","import React, { Component } from \"react\";\nimport Drawer from \"./Components/ClippedDrawer\";\nimport { connect } from \"react-redux\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport \"./App.css\";\nconst styles = theme => ({\n  root: {\n    height: \"100vh\"\n  },\n});\n\nconst mapStateToProps = state => {\n  return {};\n};\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\nclass App extends Component {\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.root + \" App\"}>\n        <Drawer />\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\r\n  REQUEST_TENANTS_FAILED,\r\n  REQUEST_TENANTS_SUCCESS,\r\n  REQUEST_TENANTS_PENDING,\r\n  CHANGE_INSERT_NAME_FIELD,\r\n  CHANGE_INSERT_EMAIL_FIELD,\r\n  CHANGE_INSERT_HOUSENUMBER_FIELD,\r\n  CHANGE_UPDATE_NAME_FIELD,\r\n  CHANGE_UPDATE_EMAIL_FIELD,\r\n  CHANGE_UPDATE_HOUSENUMBER_FIELD,\r\n  CHANGE_DELETE_HOUSENUMBER_FIELD,\r\n  CHANGE_MESSAGE_FIELD,\r\n  CHANGE_SUBJECT_FIELD,\r\n  CHANGE_SELECTED_TENANTS,\r\n  CHANGE_SENDING_FILES,\r\n  REMOVE_SENDING_FILES,\r\n  SELECT_ALL_TENANTS_ON_LOAD,\r\n  SWITCH_INSERTION_SUCCESS,\r\n  SWITCH_UPDATE_SUCCESS,\r\n  SWITCH_DELETE_SUCCESS,\r\n  SWITCH_MESSAGE_SEND_SUCCESS,\r\n  SWITCH_INSERTION_SUCCESS_CLOSE,\r\n  SWITCH_UPDATE_SUCCESS_CLOSE,\r\n  SWITCH_DELETE_SUCCESS_CLOSE,\r\n  SWITCH_MESSAGE_SEND_SUCCESS_CLOSE,\r\n  RESET_EMAIL_FIELDS,\r\n  RESET_TENANT_INSERT_FIELDS,\r\n  RESET_TENANT_UPDATE_FIELDS,\r\n  RESET_TENANT_DELETE_FIELDS,\r\n  CHANGE_UPDATE_ADMIN_EMAIL_FIELD,\r\n  CHANGE_UPDATE_ADMIN_MAIL_PASS_FIELD,\r\n  CHANGE_UPDATE_ADMIN_ACCOUNT_PASS_OLD_FIELD,\r\n  CHANGE_UPDATE_ADMIN_ACCOUNT_PASS_NEW_FIELD,\r\n  CHANGE_UPDATE_ADMIN_ACCOUNT_PASS_REPEAT_FIELD,\r\n  CHANGE_UPDATE_ADMIN_PHONE_FIELD,\r\n  RESET_EMAIL_SETTINGS_FIELDS,\r\n  RESET_ACCOUNT_SETTINGS_FIELDS,\r\n  CHANGE_UPDATE_TARIFFS_FIELD,\r\n  RESET_TARIFFS_FIELDS,\r\n  SWITCH_SETTINGS_SUCCESS,\r\n  SWITCH_SETTINGS_SUCCESS_CLOSE,\r\n  SWITCH_TARIFFS_SUCCESS,\r\n  SWITCH_TARIFFS_SUCCESS_CLOSE,\r\n  ACTION_TENANT_PENDING,\r\n  ACTION_TENANT_SUCCESS,\r\n  ACTION_TENANTS_FAILED,\r\n  SENDING_EMAIL_PENDING,\r\n  SENDING_EMAIL_SUCCESS,\r\n  SENDING_EMAIL_ERROR\r\n} from \"./constants.js\";\r\nimport { getTenantsObjectsFromSelected } from \"./tenantsSupportFunctions\";\r\nconst initialStateEmail = {\r\n  subjectField: \"\",\r\n  messageField: \"\",\r\n  files: [],\r\n  isEmailPending: false\r\n};\r\n\r\nexport const changeEmailInputs = (state = initialStateEmail, action = {}) => {\r\n  switch (action.type) {\r\n    case CHANGE_MESSAGE_FIELD:\r\n      return Object.assign({}, state, { messageField: action.payload });\r\n    case CHANGE_SUBJECT_FIELD:\r\n      return Object.assign({}, state, { subjectField: action.payload });\r\n    case CHANGE_SENDING_FILES:\r\n      return Object.assign({}, state, { files: action.payload });\r\n    case REMOVE_SENDING_FILES:\r\n      return Object.assign({}, state, { files: action.payload });\r\n    case RESET_EMAIL_FIELDS:\r\n      return Object.assign({}, state, {\r\n        subjectField: \"\",\r\n        messageField: \"\",\r\n        files: []\r\n      });\r\n    case SENDING_EMAIL_PENDING:\r\n      return Object.assign({}, state, { isEmailPending: true });\r\n    case SENDING_EMAIL_SUCCESS:\r\n      return Object.assign({}, state, {\r\n        isEmailPending: false\r\n      });\r\n    case SENDING_EMAIL_ERROR:\r\n      return Object.assign({}, state, {\r\n        error: action.payload,\r\n        isEmailPending: false\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialStateTenants = {\r\n  tenants: {},\r\n  tenantsArray: [],\r\n  selectedTenants: [],\r\n  selectedTenantsObject: {},\r\n  isPending: false,\r\n  error: \"\",\r\n  isTenantActionPending: false\r\n};\r\n\r\nexport const requestTenants = (state = initialStateTenants, action = {}) => {\r\n  switch (action.type) {\r\n    case REQUEST_TENANTS_PENDING:\r\n      return Object.assign({}, state, { isPending: true });\r\n    case REQUEST_TENANTS_SUCCESS:\r\n      return Object.assign({}, state, {\r\n        tenants: action.payload,\r\n        isPending: false\r\n      });\r\n    case REQUEST_TENANTS_FAILED:\r\n      return Object.assign({}, state, {\r\n        error: action.payload,\r\n        isPending: false\r\n      });\r\n    case SELECT_ALL_TENANTS_ON_LOAD:\r\n      return Object.assign({}, state, {\r\n        tenantsArray: action.payload,\r\n        selectedTenants: action.payload,\r\n        selectedTenantsObject: getTenantsObjectsFromSelected(\r\n          action.payload,\r\n          state.tenants\r\n        )\r\n      });\r\n    case CHANGE_SELECTED_TENANTS:\r\n      return Object.assign({}, state, {\r\n        selectedTenants: action.payload,\r\n        selectedTenantsObject: getTenantsObjectsFromSelected(\r\n          action.payload,\r\n          state.tenants\r\n        )\r\n      });\r\n    case ACTION_TENANT_PENDING:\r\n      return Object.assign({}, state, { isTenantActionPending: true });\r\n    case ACTION_TENANT_SUCCESS:\r\n      return Object.assign({}, state, {\r\n        tenants: action.payload,\r\n        isTenantActionPending: false\r\n      });\r\n    case ACTION_TENANTS_FAILED:\r\n      return Object.assign({}, state, {\r\n        error: action.payload,\r\n        isTenantActionPending: false\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialStateFields = {\r\n  insertNameField: \"\",\r\n  insertEmailField: \"\",\r\n  insertHouseNumberField: \"\",\r\n  updateNameField: \"\",\r\n  updateEmailField: \"\",\r\n  updateHouseNumberField: \"\",\r\n  deleteHouseNumberField: \"\"\r\n};\r\n\r\nexport const changeTenantsInputs = (\r\n  state = initialStateFields,\r\n  action = {}\r\n) => {\r\n  switch (action.type) {\r\n    case CHANGE_INSERT_NAME_FIELD:\r\n      return Object.assign({}, state, { insertNameField: action.payload });\r\n    case CHANGE_INSERT_EMAIL_FIELD:\r\n      return Object.assign({}, state, { insertEmailField: action.payload });\r\n    case CHANGE_INSERT_HOUSENUMBER_FIELD:\r\n      return Object.assign({}, state, {\r\n        insertHouseNumberField: action.payload\r\n      });\r\n    case CHANGE_UPDATE_HOUSENUMBER_FIELD:\r\n      return Object.assign({}, state, {\r\n        updateHouseNumberField: action.payload\r\n      });\r\n    case CHANGE_UPDATE_NAME_FIELD:\r\n      return Object.assign({}, state, { updateNameField: action.payload });\r\n    case CHANGE_UPDATE_EMAIL_FIELD:\r\n      return Object.assign({}, state, { updateEmailField: action.payload });\r\n    case CHANGE_DELETE_HOUSENUMBER_FIELD:\r\n      return Object.assign({}, state, {\r\n        deleteHouseNumberField: action.payload\r\n      });\r\n    case RESET_TENANT_INSERT_FIELDS:\r\n      return Object.assign({}, state, {\r\n        insertNameField: \"\",\r\n        insertEmailField: \"\",\r\n        insertHouseNumberField: \"\"\r\n      });\r\n    case RESET_TENANT_UPDATE_FIELDS:\r\n      return Object.assign({}, state, {\r\n        updateNameField: \"\",\r\n        updateEmailField: \"\",\r\n        updateHouseNumberField: \"\"\r\n      });\r\n    case RESET_TENANT_DELETE_FIELDS:\r\n      return Object.assign({}, state, {\r\n        deleteHouseNumberField: \"\"\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialStateSettingsFields = {\r\n  updateAdminEmailField: \"\",\r\n  updateAdminMailPassField: \"\",\r\n  updateAdminAccountPassOldField: \"\",\r\n  updateAdminAccountPassNewField: \"\",\r\n  updateAdminAccountPassRepeatField: \"\"\r\n};\r\n\r\nexport const changeAdminInputs = (\r\n  state = initialStateSettingsFields,\r\n  action = {}\r\n) => {\r\n  switch (action.type) {\r\n    case CHANGE_UPDATE_ADMIN_EMAIL_FIELD:\r\n      return Object.assign({}, state, {\r\n        updateAdminEmailField: action.payload\r\n      });\r\n    case CHANGE_UPDATE_ADMIN_MAIL_PASS_FIELD:\r\n      return Object.assign({}, state, {\r\n        updateAdminMailPassField: action.payload\r\n      });\r\n    case CHANGE_UPDATE_ADMIN_ACCOUNT_PASS_OLD_FIELD:\r\n      return Object.assign({}, state, {\r\n        updateAdminAccountPassOldField: action.payload\r\n      });\r\n    case CHANGE_UPDATE_ADMIN_ACCOUNT_PASS_NEW_FIELD:\r\n      return Object.assign({}, state, {\r\n        updateAdminAccountPassNewField: action.payload\r\n      });\r\n    case CHANGE_UPDATE_ADMIN_ACCOUNT_PASS_REPEAT_FIELD:\r\n      return Object.assign({}, state, {\r\n        updateAdminAccountPassRepeatField: action.payload\r\n      });\r\n    case CHANGE_UPDATE_ADMIN_PHONE_FIELD:\r\n      return Object.assign({}, state, {\r\n        updateAdminPhoneField: action.payload\r\n      });\r\n    case RESET_EMAIL_SETTINGS_FIELDS:\r\n      return Object.assign({}, state, {\r\n        updateAdminEmailField: \"\",\r\n        updateAdminMailPassField: \"\"\r\n      });\r\n    case RESET_ACCOUNT_SETTINGS_FIELDS:\r\n      return Object.assign({}, state, {\r\n        updateAdminAccountPassOldField: \"\",\r\n        updateAdminAccountPassNewField: \"\",\r\n        updateAdminAccountPassRepeatField: \"\"\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialStateTariffsFields = {\r\n  updateTariffsField: \"\"\r\n};\r\n\r\nexport const changeTariffsInputs = (\r\n  state = initialStateTariffsFields,\r\n  action = {}\r\n) => {\r\n  switch (action.type) {\r\n    case CHANGE_UPDATE_TARIFFS_FIELD:\r\n      return Object.assign({}, state, {\r\n        updateTariffsField: action.payload\r\n      });\r\n    case RESET_TARIFFS_FIELDS:\r\n      return Object.assign({}, state, {\r\n        updateTariffsField: \"\"\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialStateSnackbars = {\r\n  snackInsert: false,\r\n  snackUpdate: false,\r\n  snackDelete: false,\r\n  snackMessageSend: false,\r\n  snackSettings: false,\r\n  snackTariffs: false\r\n};\r\nexport const handleSnackbars = (state = initialStateSnackbars, action = {}) => {\r\n  switch (action.type) {\r\n    case SWITCH_INSERTION_SUCCESS:\r\n    case SWITCH_INSERTION_SUCCESS_CLOSE:\r\n      return Object.assign({}, state, { snackInsert: action.payload });\r\n    case SWITCH_UPDATE_SUCCESS:\r\n    case SWITCH_UPDATE_SUCCESS_CLOSE:\r\n      return Object.assign({}, state, { snackUpdate: action.payload });\r\n    case SWITCH_DELETE_SUCCESS:\r\n    case SWITCH_DELETE_SUCCESS_CLOSE:\r\n      return Object.assign({}, state, { snackDelete: action.payload });\r\n    case SWITCH_MESSAGE_SEND_SUCCESS:\r\n    case SWITCH_MESSAGE_SEND_SUCCESS_CLOSE:\r\n      return Object.assign({}, state, { snackMessageSend: action.payload });\r\n    case SWITCH_SETTINGS_SUCCESS:\r\n    case SWITCH_SETTINGS_SUCCESS_CLOSE:\r\n      return Object.assign({}, state, { snackSettings: action.payload });\r\n    case SWITCH_TARIFFS_SUCCESS:\r\n    case SWITCH_TARIFFS_SUCCESS_CLOSE:\r\n      return Object.assign({}, state, { snackTariffs: action.payload });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  CHANGE_TITLE_FIELD,\r\n  CHANGE_BODY_FIELD,\r\n  REQUEST_POSTS_SUCCESS,\r\n  OPEN_INSERT_POST_WINDOW,\r\n  CLOSE_INSERT_POST_WINDOW,\r\n  OPEN_EDIT_POST_WINDOW,\r\n  CLOSE_EDIT_POST_WINDOW,\r\n  SELECT_EDIT_POST,\r\n  CHANGE_EDIT_TITLE_FIELD,\r\n  CHANGE_EDIT_BODY_FIELD,\r\n  SWITCH_INSERTION_POST_SUCCESS,\r\n  SWITCH_INSERTION_POST_SUCCESS_CLOSE,\r\n  SWITCH_UPDATE_POST_SUCCESS,\r\n  SWITCH_UPDATE_POST_SUCCESS_CLOSE,\r\n  SWITCH_DELETE_POST_SUCCESS,\r\n  SWITCH_DELETE_POST_SUCCESS_CLOSE,\r\n  RESET_INSERT_POST_FIELDS,\r\n  RESET_UPDATE_POST_FIELDS,\r\n  RENDER_NEW_POST,\r\n  RENDER_UPDATE_POST,\r\n  RENDER_DELETE_POST\r\n\r\n  // SELECT_LAST_POSTS_ON_LOAD\r\n} from \"./constants\";\r\nconst initialStatePosts = {\r\n  titleField: \"\",\r\n  bodyField: \"\",\r\n  isPending: false,\r\n  loadedPosts: [],\r\n  insertWindowOpened: false,\r\n  editWindowOpended: false,\r\n  editTitleField: \"\",\r\n  editBodyField: \"\",\r\n  editPostID: \"\",\r\n  snackInsert: false,\r\n  snackUpdate: false,\r\n  snackDelete: false\r\n};\r\n\r\nconst findPostByID = (id, state) => {\r\n  // console.log(state.loadedPosts.filter(post => (post._id = id)));\r\n  return state.loadedPosts.filter(post => post._id === id)[0];\r\n};\r\nconst findPostIndexByID = (id, state) => {\r\n  return state.loadedPosts.reduce((acc, post, index) => {\r\n    if (post._id === id) return acc + index;\r\n    else return acc;\r\n  }, 0);\r\n};\r\n\r\nexport const postsReducer = (state = initialStatePosts, action = {}) => {\r\n  switch (action.type) {\r\n    case CHANGE_TITLE_FIELD:\r\n      return Object.assign({}, state, { titleField: action.payload });\r\n    case CHANGE_BODY_FIELD:\r\n      return Object.assign({}, state, { bodyField: action.payload });\r\n    case CHANGE_EDIT_TITLE_FIELD:\r\n      return Object.assign({}, state, { editTitleField: action.payload });\r\n    case CHANGE_EDIT_BODY_FIELD:\r\n      return Object.assign({}, state, { editBodyField: action.payload });\r\n    case REQUEST_POSTS_SUCCESS:\r\n      return Object.assign({}, state, {\r\n        loadedPosts: action.payload,\r\n        isPending: false\r\n      });\r\n    case OPEN_INSERT_POST_WINDOW:\r\n    case CLOSE_INSERT_POST_WINDOW:\r\n      return Object.assign({}, state, { insertWindowOpened: action.payload });\r\n    case OPEN_EDIT_POST_WINDOW:\r\n    case CLOSE_EDIT_POST_WINDOW:\r\n      return Object.assign({}, state, { editWindowOpended: action.payload });\r\n    case SELECT_EDIT_POST:\r\n      return Object.assign({}, state, {\r\n        editPostID: action.payload,\r\n        editBodyField: findPostByID(action.payload, state).body,\r\n        editTitleField: findPostByID(action.payload, state).title,\r\n        editWindowOpended: true,\r\n        insertWindowOpened: false\r\n      });\r\n    case SWITCH_INSERTION_POST_SUCCESS:\r\n    case SWITCH_INSERTION_POST_SUCCESS_CLOSE:\r\n      return Object.assign({}, state, { snackInsert: action.payload });\r\n    case SWITCH_UPDATE_POST_SUCCESS:\r\n    case SWITCH_UPDATE_POST_SUCCESS_CLOSE:\r\n      return Object.assign({}, state, { snackUpdate: action.payload });\r\n    case SWITCH_DELETE_POST_SUCCESS:\r\n    case SWITCH_DELETE_POST_SUCCESS_CLOSE:\r\n      return Object.assign({}, state, { snackDelete: action.payload });\r\n    case RESET_INSERT_POST_FIELDS:\r\n      return Object.assign({}, state, {\r\n        titleField: \"\",\r\n        bodyField: \"\",\r\n        insertWindowOpened: false\r\n      });\r\n    case RESET_UPDATE_POST_FIELDS:\r\n      return Object.assign({}, state, {\r\n        editTitleField: \"\",\r\n        editBodyField: \"\",\r\n        editPostID: \"\",\r\n        editWindowOpended: false\r\n      });\r\n    case RENDER_NEW_POST:\r\n      return { ...state, loadedPosts: [action.payload, ...state.loadedPosts] };\r\n    case RENDER_UPDATE_POST:\r\n      return {\r\n        ...state,\r\n        loadedPosts: state.loadedPosts.map((post, index) => {\r\n          if (index === findPostIndexByID(action.payload._id, state)) {\r\n            return action.payload;\r\n          }\r\n          return post;\r\n        })\r\n      };\r\n    case RENDER_DELETE_POST:\r\n      return {\r\n        ...state,\r\n        loadedPosts: state.loadedPosts.filter(\r\n          post => post._id !== action.payload._id\r\n        )\r\n      };\r\n    // case SELECT_LAST_POSTS_ON_LOAD:\r\n    //   return Object.assign({}, state, {\r\n    //     tenantsArray: action.payload,\r\n    //     selectedTenants: action.payload,\r\n    //     selectedTenantsObject: getTenantsObjectsFromSelected(\r\n    //       action.payload,\r\n    //       state.tenants\r\n    //     )\r\n    //   });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  SWITCH_INSERTION_SUCCESS,\r\n  SWITCH_UPDATE_SUCCESS,\r\n  SWITCH_DELETE_SUCCESS,\r\n  SWITCH_INSERTION_SUCCESS_CLOSE,\r\n  SWITCH_UPDATE_SUCCESS_CLOSE,\r\n  SWITCH_DELETE_SUCCESS_CLOSE\r\n} from \"./constants.js\";\r\n\r\nconst initialStateSnackbars = {\r\n  snackInsert: false,\r\n  snackUpdate: false,\r\n  snackDelete: false,\r\n  snackMessageSend: false\r\n};\r\n\r\nexport const postReducer = (state = initialStateSnackbars, action = {}) => {\r\n  switch (action.type) {\r\n    case SWITCH_INSERTION_SUCCESS:\r\n    case SWITCH_INSERTION_SUCCESS_CLOSE:\r\n      return Object.assign({}, state, { snackInsert: action.payload });\r\n    case SWITCH_DELETE_SUCCESS:\r\n    case SWITCH_DELETE_SUCCESS_CLOSE:\r\n      return Object.assign({}, state, { snackDelete: action.payload });\r\n    case SWITCH_UPDATE_SUCCESS:\r\n    case SWITCH_UPDATE_SUCCESS_CLOSE:\r\n      return Object.assign({}, state, { snackUpdate: action.payload });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\nimport {\n  changeEmailInputs,\n  changeTenantsInputs,\n  requestTenants,\n  handleSnackbars,\n  changeAdminInputs,\n  changeTariffsInputs\n} from \"./reducers\";\nimport { postsReducer } from \"./Components/Posts/reducers.js\";\nimport { postReducer } from \"./Components/Posts/Post/reducers.js\";\nconst logger = createLogger();\nconst rootReducer = combineReducers({\n  changeEmailInputs,\n  changeTenantsInputs,\n  requestTenants,\n  handleSnackbars,\n  postsReducer,\n  postReducer,\n  changeAdminInputs,\n  changeTariffsInputs\n});\nlet store = \"\";\nif (process.env.NODE_ENV === \"production\") {\n  store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\n}\nstore = createStore(rootReducer, applyMiddleware(thunkMiddleware, logger));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const SWITCH_INSERTION_SUCCESS = \"SWITCH_INSERTION_SUCCESS\";\r\nexport const SWITCH_UPDATE_SUCCESS = \"SWITCH_UPDATE_SUCCESS\";\r\nexport const SWITCH_DELETE_SUCCESS = \"SWITCH_DELETE_SUCCESS\";\r\nexport const SWITCH_INSERTION_SUCCESS_CLOSE = \"SWITCH_INSERTION_SUCCESS_CLOSE\";\r\nexport const SWITCH_UPDATE_SUCCESS_CLOSE = \"SWITCH_UPDATE_SUCCESS_CLOSE\";\r\nexport const SWITCH_DELETE_SUCCESS_CLOSE = \"SWITCH_DELETE_SUCCESS_CLOSE\";"],"sourceRoot":""}